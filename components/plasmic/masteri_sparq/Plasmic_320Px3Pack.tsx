// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: DPS3rZoEyBnNo
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./Plasmic_320Px3Pack.module.css"; // plasmic-import: DPS3rZoEyBnNo/css

export type Plasmic_320Px3Pack__VariantMembers = {};
export type Plasmic_320Px3Pack__VariantsArgs = {};
type VariantPropType = keyof Plasmic_320Px3Pack__VariantsArgs;
export const Plasmic_320Px3Pack__VariantProps = new Array<VariantPropType>();

export type Plasmic_320Px3Pack__ArgsType = {};
type ArgPropType = keyof Plasmic_320Px3Pack__ArgsType;
export const Plasmic_320Px3Pack__ArgProps = new Array<ArgPropType>();

export type Plasmic_320Px3Pack__OverridesType = {
  div189?: p.Flex<"div">;
  a18?: p.Flex<"div">;
  productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3?: p.Flex<"a"> &
    Partial<LinkProps>;
  div190?: p.Flex<"div">;
  _43Rating447Votes14?: p.Flex<"div">;
  i66?: p.Flex<"div">;
  i67?: p.Flex<"div">;
  i68?: p.Flex<"div">;
  i69?: p.Flex<"div">;
  i70?: p.Flex<"div">;
  div191?: p.Flex<"div">;
  span9?: p.Flex<"div">;
  bestSeller3?: p.Flex<"div">;
  form14?: p.Flex<"div">;
  div192?: p.Flex<"div">;
  div193?: p.Flex<"div">;
  div194?: p.Flex<"div">;
  div195?: p.Flex<"a"> & Partial<LinkProps>;
  label27?: p.Flex<"div">;
  strawberry14?: p.Flex<"div">;
  div196?: p.Flex<"a"> & Partial<LinkProps>;
  label28?: p.Flex<"div">;
  vanilla14?: p.Flex<"div">;
  div197?: p.Flex<"div">;
  buttonAddToCart43324944548533?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface Default_320Px3PackProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_320Px3Pack__RenderFunc(props: {
  variants: Plasmic_320Px3Pack__VariantsArgs;
  args: Plasmic_320Px3Pack__ArgsType;
  overrides: Plasmic_320Px3Pack__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"div189"}
      data-plasmic-override={overrides.div189}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.div189
      )}
    >
      <div
        data-plasmic-name={"a18"}
        data-plasmic-override={overrides.a18}
        className={classNames(projectcss.all, sty.a18)}
      >
        <p.PlasmicLink
          data-plasmic-name={
            "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3"
          }
          data-plasmic-override={
            overrides.productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3
          }
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3
          )}
          component={Link}
          href={
            "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
          }
          platform={"nextjs"}
        />

        <div
          data-plasmic-name={"div190"}
          data-plasmic-override={overrides.div190}
          className={classNames(projectcss.all, sty.div190)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__uac8R
            )}
          >
            {"Vitamin Air 3-Pack"}
          </div>

          <div
            data-plasmic-name={"_43Rating447Votes14"}
            data-plasmic-override={overrides._43Rating447Votes14}
            className={classNames(projectcss.all, sty._43Rating447Votes14)}
          >
            <div
              data-plasmic-name={"i66"}
              data-plasmic-override={overrides.i66}
              className={classNames(projectcss.all, sty.i66)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tfInd
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i67"}
              data-plasmic-override={overrides.i67}
              className={classNames(projectcss.all, sty.i67)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___1Gley
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i68"}
              data-plasmic-override={overrides.i68}
              className={classNames(projectcss.all, sty.i68)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cAkZu
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i69"}
              data-plasmic-override={overrides.i69}
              className={classNames(projectcss.all, sty.i69)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tksZa
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i70"}
              data-plasmic-override={overrides.i70}
              className={classNames(projectcss.all, sty.i70)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wKtXw
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___8HdvB
              )}
            >
              {"(447)"}
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__su646
            )}
          >
            {"$56"}
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rEnH
            )}
          >
            {"(One of each formulation)"}
          </div>
        </div>

        <div
          data-plasmic-name={"div191"}
          data-plasmic-override={overrides.div191}
          className={classNames(projectcss.all, sty.div191)}
        >
          <div
            data-plasmic-name={"span9"}
            data-plasmic-override={overrides.span9}
            className={classNames(projectcss.all, sty.span9)}
          >
            <div
              data-plasmic-name={"bestSeller3"}
              data-plasmic-override={overrides.bestSeller3}
              className={classNames(projectcss.all, sty.bestSeller3)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iiodZ
              )}
            >
              {"BEST SELLER!"}
            </div>
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"form14"}
        data-plasmic-override={overrides.form14}
        className={classNames(projectcss.all, sty.form14)}
      >
        <div
          data-plasmic-name={"div192"}
          data-plasmic-override={overrides.div192}
          className={classNames(projectcss.all, sty.div192)}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"div193"}
            data-plasmic-override={overrides.div193}
            hasGap={true}
            className={classNames(projectcss.all, sty.div193)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___990Ks
              )}
            >
              {"Choose Flavor"}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"div194"}
              data-plasmic-override={overrides.div194}
              hasGap={true}
              className={classNames(projectcss.all, sty.div194)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div195"}
                data-plasmic-override={overrides.div195}
                className={classNames(projectcss.all, projectcss.a, sty.div195)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label27"}
                  data-plasmic-override={overrides.label27}
                  className={classNames(projectcss.all, sty.label27)}
                />

                <div
                  data-plasmic-name={"strawberry14"}
                  data-plasmic-override={overrides.strawberry14}
                  className={classNames(projectcss.all, sty.strawberry14)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0Zmr
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div196"}
                data-plasmic-override={overrides.div196}
                className={classNames(projectcss.all, projectcss.a, sty.div196)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label28"}
                  data-plasmic-override={overrides.label28}
                  className={classNames(projectcss.all, sty.label28)}
                />

                <div
                  data-plasmic-name={"vanilla14"}
                  data-plasmic-override={overrides.vanilla14}
                  className={classNames(projectcss.all, sty.vanilla14)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__khL0N
                    )}
                  >
                    {"Vanilla"}
                  </div>
                </div>
              </p.PlasmicLink>
            </p.Stack>
          </p.Stack>
        </div>

        <div
          data-plasmic-name={"div197"}
          data-plasmic-override={overrides.div197}
          className={classNames(projectcss.all, sty.div197)}
        >
          <p.PlasmicLink
            data-plasmic-name={"buttonAddToCart43324944548533"}
            data-plasmic-override={overrides.buttonAddToCart43324944548533}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.buttonAddToCart43324944548533
            )}
            component={Link}
            href={
              "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
            }
            platform={"nextjs"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dUfrc
              )}
            >
              {"SHOP NOW"}
            </div>
          </p.PlasmicLink>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  div189: [
    "div189",
    "a18",
    "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3",
    "div190",
    "_43Rating447Votes14",
    "i66",
    "i67",
    "i68",
    "i69",
    "i70",
    "div191",
    "span9",
    "bestSeller3",
    "form14",
    "div192",
    "div193",
    "div194",
    "div195",
    "label27",
    "strawberry14",
    "div196",
    "label28",
    "vanilla14",
    "div197",
    "buttonAddToCart43324944548533"
  ],
  a18: [
    "a18",
    "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3",
    "div190",
    "_43Rating447Votes14",
    "i66",
    "i67",
    "i68",
    "i69",
    "i70",
    "div191",
    "span9",
    "bestSeller3"
  ],
  productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3: [
    "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3"
  ],
  div190: ["div190", "_43Rating447Votes14", "i66", "i67", "i68", "i69", "i70"],
  _43Rating447Votes14: [
    "_43Rating447Votes14",
    "i66",
    "i67",
    "i68",
    "i69",
    "i70"
  ],
  i66: ["i66"],
  i67: ["i67"],
  i68: ["i68"],
  i69: ["i69"],
  i70: ["i70"],
  div191: ["div191", "span9", "bestSeller3"],
  span9: ["span9", "bestSeller3"],
  bestSeller3: ["bestSeller3"],
  form14: [
    "form14",
    "div192",
    "div193",
    "div194",
    "div195",
    "label27",
    "strawberry14",
    "div196",
    "label28",
    "vanilla14",
    "div197",
    "buttonAddToCart43324944548533"
  ],
  div192: [
    "div192",
    "div193",
    "div194",
    "div195",
    "label27",
    "strawberry14",
    "div196",
    "label28",
    "vanilla14"
  ],
  div193: [
    "div193",
    "div194",
    "div195",
    "label27",
    "strawberry14",
    "div196",
    "label28",
    "vanilla14"
  ],
  div194: [
    "div194",
    "div195",
    "label27",
    "strawberry14",
    "div196",
    "label28",
    "vanilla14"
  ],
  div195: ["div195", "label27", "strawberry14"],
  label27: ["label27"],
  strawberry14: ["strawberry14"],
  div196: ["div196", "label28", "vanilla14"],
  label28: ["label28"],
  vanilla14: ["vanilla14"],
  div197: ["div197", "buttonAddToCart43324944548533"],
  buttonAddToCart43324944548533: ["buttonAddToCart43324944548533"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  div189: "div";
  a18: "div";
  productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3: "a";
  div190: "div";
  _43Rating447Votes14: "div";
  i66: "div";
  i67: "div";
  i68: "div";
  i69: "div";
  i70: "div";
  div191: "div";
  span9: "div";
  bestSeller3: "div";
  form14: "div";
  div192: "div";
  div193: "div";
  div194: "div";
  div195: "a";
  label27: "div";
  strawberry14: "div";
  div196: "a";
  label28: "div";
  vanilla14: "div";
  div197: "div";
  buttonAddToCart43324944548533: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_320Px3Pack__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_320Px3Pack__VariantsArgs;
    args?: Plasmic_320Px3Pack__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_320Px3Pack__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_320Px3Pack__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic_320Px3Pack__ArgProps,
          internalVariantPropNames: Plasmic_320Px3Pack__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_320Px3Pack__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "div189") {
    func.displayName = "Plasmic_320Px3Pack";
  } else {
    func.displayName = `Plasmic_320Px3Pack.${nodeName}`;
  }
  return func;
}

export const Plasmic_320Px3Pack = Object.assign(
  // Top-level Plasmic_320Px3Pack renders the root element
  makeNodeComponent("div189"),
  {
    // Helper components rendering sub-elements
    a18: makeNodeComponent("a18"),
    productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3:
      makeNodeComponent(
        "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg3"
      ),
    div190: makeNodeComponent("div190"),
    _43Rating447Votes14: makeNodeComponent("_43Rating447Votes14"),
    i66: makeNodeComponent("i66"),
    i67: makeNodeComponent("i67"),
    i68: makeNodeComponent("i68"),
    i69: makeNodeComponent("i69"),
    i70: makeNodeComponent("i70"),
    div191: makeNodeComponent("div191"),
    span9: makeNodeComponent("span9"),
    bestSeller3: makeNodeComponent("bestSeller3"),
    form14: makeNodeComponent("form14"),
    div192: makeNodeComponent("div192"),
    div193: makeNodeComponent("div193"),
    div194: makeNodeComponent("div194"),
    div195: makeNodeComponent("div195"),
    label27: makeNodeComponent("label27"),
    strawberry14: makeNodeComponent("strawberry14"),
    div196: makeNodeComponent("div196"),
    label28: makeNodeComponent("label28"),
    vanilla14: makeNodeComponent("vanilla14"),
    div197: makeNodeComponent("div197"),
    buttonAddToCart43324944548533: makeNodeComponent(
      "buttonAddToCart43324944548533"
    ),

    // Metadata about props expected for Plasmic_320Px3Pack
    internalVariantProps: Plasmic_320Px3Pack__VariantProps,
    internalArgProps: Plasmic_320Px3Pack__ArgProps
  }
);

export default Plasmic_320Px3Pack;
/* prettier-ignore-end */
