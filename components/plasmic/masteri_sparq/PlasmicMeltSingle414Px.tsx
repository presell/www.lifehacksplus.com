// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: BWMj3hPaIIM4a
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./PlasmicMeltSingle414Px.module.css"; // plasmic-import: BWMj3hPaIIM4a/css

export type PlasmicMeltSingle414Px__VariantMembers = {};
export type PlasmicMeltSingle414Px__VariantsArgs = {};
type VariantPropType = keyof PlasmicMeltSingle414Px__VariantsArgs;
export const PlasmicMeltSingle414Px__VariantProps =
  new Array<VariantPropType>();

export type PlasmicMeltSingle414Px__ArgsType = {};
type ArgPropType = keyof PlasmicMeltSingle414Px__ArgsType;
export const PlasmicMeltSingle414Px__ArgProps = new Array<ArgPropType>();

export type PlasmicMeltSingle414Px__OverridesType = {
  div26?: p.Flex<"div">;
  a3?: p.Flex<"div">;
  productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg?: p.Flex<"a"> &
    Partial<LinkProps>;
  div27?: p.Flex<"div">;
  _43Rating447Votes3?: p.Flex<"div">;
  i11?: p.Flex<"div">;
  i12?: p.Flex<"div">;
  i13?: p.Flex<"div">;
  i14?: p.Flex<"div">;
  i15?: p.Flex<"div">;
  div28?: p.Flex<"div">;
  form3?: p.Flex<"div">;
  div29?: p.Flex<"div">;
  div30?: p.Flex<"div">;
  div31?: p.Flex<"div">;
  div32?: p.Flex<"a"> & Partial<LinkProps>;
  label5?: p.Flex<"div">;
  strawberry3?: p.Flex<"div">;
  div33?: p.Flex<"a"> & Partial<LinkProps>;
  label6?: p.Flex<"div">;
  vanilla3?: p.Flex<"div">;
  div34?: p.Flex<"div">;
  buttonAddToCart10624224972?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultMeltSingle414PxProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicMeltSingle414Px__RenderFunc(props: {
  variants: PlasmicMeltSingle414Px__VariantsArgs;
  args: PlasmicMeltSingle414Px__ArgsType;
  overrides: PlasmicMeltSingle414Px__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"div26"}
      data-plasmic-override={overrides.div26}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.div26
      )}
    >
      <div
        data-plasmic-name={"a3"}
        data-plasmic-override={overrides.a3}
        className={classNames(projectcss.all, sty.a3)}
      >
        <p.PlasmicLink
          data-plasmic-name={
            "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg"
          }
          data-plasmic-override={
            overrides.productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg
          }
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.productMeltE5Ee4B8Cb3944Dfa969D133320737857250X2502Xjpg
          )}
          component={Link}
          href={
            "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
          }
          platform={"nextjs"}
        />

        <div
          data-plasmic-name={"div27"}
          data-plasmic-override={overrides.div27}
          className={classNames(projectcss.all, sty.div27)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__q6SSn
            )}
          >
            {"Melt"}
          </div>

          <div
            data-plasmic-name={"_43Rating447Votes3"}
            data-plasmic-override={overrides._43Rating447Votes3}
            className={classNames(projectcss.all, sty._43Rating447Votes3)}
          >
            <div
              data-plasmic-name={"i11"}
              data-plasmic-override={overrides.i11}
              className={classNames(projectcss.all, sty.i11)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xcMoE
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i12"}
              data-plasmic-override={overrides.i12}
              className={classNames(projectcss.all, sty.i12)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__o1LyM
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i13"}
              data-plasmic-override={overrides.i13}
              className={classNames(projectcss.all, sty.i13)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nLmHq
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i14"}
              data-plasmic-override={overrides.i14}
              className={classNames(projectcss.all, sty.i14)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cuIf
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i15"}
              data-plasmic-override={overrides.i15}
              className={classNames(projectcss.all, sty.i15)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___76Qmd
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fgsah
              )}
            >
              {"(447)"}
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__u0HoP
            )}
          >
            {"$20"}
          </div>

          <div
            data-plasmic-name={"div28"}
            data-plasmic-override={overrides.div28}
            className={classNames(projectcss.all, sty.div28)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qgxKk
              )}
            >
              {"Metabolism-Boosting"}
            </div>
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"form3"}
        data-plasmic-override={overrides.form3}
        className={classNames(projectcss.all, sty.form3)}
      >
        <div
          data-plasmic-name={"div29"}
          data-plasmic-override={overrides.div29}
          className={classNames(projectcss.all, sty.div29)}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"div30"}
            data-plasmic-override={overrides.div30}
            hasGap={true}
            className={classNames(projectcss.all, sty.div30)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__y8Hbz
              )}
            >
              {"Choose Flavor"}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"div31"}
              data-plasmic-override={overrides.div31}
              hasGap={true}
              className={classNames(projectcss.all, sty.div31)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div32"}
                data-plasmic-override={overrides.div32}
                className={classNames(projectcss.all, projectcss.a, sty.div32)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label5"}
                  data-plasmic-override={overrides.label5}
                  className={classNames(projectcss.all, sty.label5)}
                />

                <div
                  data-plasmic-name={"strawberry3"}
                  data-plasmic-override={overrides.strawberry3}
                  className={classNames(projectcss.all, sty.strawberry3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7BxfE
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div33"}
                data-plasmic-override={overrides.div33}
                className={classNames(projectcss.all, projectcss.a, sty.div33)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868940" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label6"}
                  data-plasmic-override={overrides.label6}
                  className={classNames(projectcss.all, sty.label6)}
                />

                <div
                  data-plasmic-name={"vanilla3"}
                  data-plasmic-override={overrides.vanilla3}
                  className={classNames(projectcss.all, sty.vanilla3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pmaKg
                    )}
                  >
                    {"Vanilla"}
                  </div>
                </div>
              </p.PlasmicLink>
            </p.Stack>
          </p.Stack>
        </div>

        <div
          data-plasmic-name={"div34"}
          data-plasmic-override={overrides.div34}
          className={classNames(projectcss.all, sty.div34)}
        >
          <p.PlasmicLink
            data-plasmic-name={"buttonAddToCart10624224972"}
            data-plasmic-override={overrides.buttonAddToCart10624224972}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.buttonAddToCart10624224972
            )}
            component={Link}
            href={
              "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
            }
            platform={"nextjs"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lfBcC
              )}
            >
              {"SHOP NOW"}
            </div>
          </p.PlasmicLink>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  div26: [
    "div26",
    "a3",
    "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg",
    "div27",
    "_43Rating447Votes3",
    "i11",
    "i12",
    "i13",
    "i14",
    "i15",
    "div28",
    "form3",
    "div29",
    "div30",
    "div31",
    "div32",
    "label5",
    "strawberry3",
    "div33",
    "label6",
    "vanilla3",
    "div34",
    "buttonAddToCart10624224972"
  ],
  a3: [
    "a3",
    "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg",
    "div27",
    "_43Rating447Votes3",
    "i11",
    "i12",
    "i13",
    "i14",
    "i15",
    "div28"
  ],
  productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg: [
    "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg"
  ],
  div27: [
    "div27",
    "_43Rating447Votes3",
    "i11",
    "i12",
    "i13",
    "i14",
    "i15",
    "div28"
  ],
  _43Rating447Votes3: ["_43Rating447Votes3", "i11", "i12", "i13", "i14", "i15"],
  i11: ["i11"],
  i12: ["i12"],
  i13: ["i13"],
  i14: ["i14"],
  i15: ["i15"],
  div28: ["div28"],
  form3: [
    "form3",
    "div29",
    "div30",
    "div31",
    "div32",
    "label5",
    "strawberry3",
    "div33",
    "label6",
    "vanilla3",
    "div34",
    "buttonAddToCart10624224972"
  ],
  div29: [
    "div29",
    "div30",
    "div31",
    "div32",
    "label5",
    "strawberry3",
    "div33",
    "label6",
    "vanilla3"
  ],
  div30: [
    "div30",
    "div31",
    "div32",
    "label5",
    "strawberry3",
    "div33",
    "label6",
    "vanilla3"
  ],
  div31: [
    "div31",
    "div32",
    "label5",
    "strawberry3",
    "div33",
    "label6",
    "vanilla3"
  ],
  div32: ["div32", "label5", "strawberry3"],
  label5: ["label5"],
  strawberry3: ["strawberry3"],
  div33: ["div33", "label6", "vanilla3"],
  label6: ["label6"],
  vanilla3: ["vanilla3"],
  div34: ["div34", "buttonAddToCart10624224972"],
  buttonAddToCart10624224972: ["buttonAddToCart10624224972"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  div26: "div";
  a3: "div";
  productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg: "a";
  div27: "div";
  _43Rating447Votes3: "div";
  i11: "div";
  i12: "div";
  i13: "div";
  i14: "div";
  i15: "div";
  div28: "div";
  form3: "div";
  div29: "div";
  div30: "div";
  div31: "div";
  div32: "a";
  label5: "div";
  strawberry3: "div";
  div33: "a";
  label6: "div";
  vanilla3: "div";
  div34: "div";
  buttonAddToCart10624224972: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicMeltSingle414Px__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicMeltSingle414Px__VariantsArgs;
    args?: PlasmicMeltSingle414Px__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicMeltSingle414Px__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicMeltSingle414Px__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicMeltSingle414Px__ArgProps,
          internalVariantPropNames: PlasmicMeltSingle414Px__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicMeltSingle414Px__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "div26") {
    func.displayName = "PlasmicMeltSingle414Px";
  } else {
    func.displayName = `PlasmicMeltSingle414Px.${nodeName}`;
  }
  return func;
}

export const PlasmicMeltSingle414Px = Object.assign(
  // Top-level PlasmicMeltSingle414Px renders the root element
  makeNodeComponent("div26"),
  {
    // Helper components rendering sub-elements
    a3: makeNodeComponent("a3"),
    productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg: makeNodeComponent(
      "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg"
    ),
    div27: makeNodeComponent("div27"),
    _43Rating447Votes3: makeNodeComponent("_43Rating447Votes3"),
    i11: makeNodeComponent("i11"),
    i12: makeNodeComponent("i12"),
    i13: makeNodeComponent("i13"),
    i14: makeNodeComponent("i14"),
    i15: makeNodeComponent("i15"),
    div28: makeNodeComponent("div28"),
    form3: makeNodeComponent("form3"),
    div29: makeNodeComponent("div29"),
    div30: makeNodeComponent("div30"),
    div31: makeNodeComponent("div31"),
    div32: makeNodeComponent("div32"),
    label5: makeNodeComponent("label5"),
    strawberry3: makeNodeComponent("strawberry3"),
    div33: makeNodeComponent("div33"),
    label6: makeNodeComponent("label6"),
    vanilla3: makeNodeComponent("vanilla3"),
    div34: makeNodeComponent("div34"),
    buttonAddToCart10624224972: makeNodeComponent("buttonAddToCart10624224972"),

    // Metadata about props expected for PlasmicMeltSingle414Px
    internalVariantProps: PlasmicMeltSingle414Px__VariantProps,
    internalArgProps: PlasmicMeltSingle414Px__ArgProps
  }
);

export default PlasmicMeltSingle414Px;
/* prettier-ignore-end */
