// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: LIbPMREFofruh
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./PlasmicHeadlineIcons414Px.module.css"; // plasmic-import: LIbPMREFofruh/css

export type PlasmicHeadlineIcons414Px__VariantMembers = {};
export type PlasmicHeadlineIcons414Px__VariantsArgs = {};
type VariantPropType = keyof PlasmicHeadlineIcons414Px__VariantsArgs;
export const PlasmicHeadlineIcons414Px__VariantProps =
  new Array<VariantPropType>();

export type PlasmicHeadlineIcons414Px__ArgsType = {};
type ArgPropType = keyof PlasmicHeadlineIcons414Px__ArgsType;
export const PlasmicHeadlineIcons414Px__ArgProps = new Array<ArgPropType>();

export type PlasmicHeadlineIcons414Px__OverridesType = {
  div2?: p.Flex<"div">;
  breatheVitaminAir?: p.Flex<"div">;
  div3?: p.Flex<"div">;
  div4?: p.Flex<"div">;
  smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png?: p.Flex<"div">;
  _0Nicotine?: p.Flex<"div">;
  div5?: p.Flex<"div">;
  beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png?: p.Flex<"div">;
  labTested?: p.Flex<"div">;
  div6?: p.Flex<"div">;
  pillsIcon73726148C05B472793782519623Fd4A0480X480Png?: p.Flex<"div">;
  vitamins?: p.Flex<"div">;
  div7?: p.Flex<"div">;
  recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png?: p.Flex<"div">;
  recyclable?: p.Flex<"div">;
};

export interface DefaultHeadlineIcons414PxProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHeadlineIcons414Px__RenderFunc(props: {
  variants: PlasmicHeadlineIcons414Px__VariantsArgs;
  args: PlasmicHeadlineIcons414Px__ArgsType;
  overrides: PlasmicHeadlineIcons414Px__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"div2"}
      data-plasmic-override={overrides.div2}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.div2
      )}
    >
      <div
        data-plasmic-name={"breatheVitaminAir"}
        data-plasmic-override={overrides.breatheVitaminAir}
        className={classNames(projectcss.all, sty.breatheVitaminAir)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__ksIHg
          )}
        >
          {"BREATHE VITAMIN AIRÂ®"}
        </div>
      </div>

      <div
        data-plasmic-name={"div3"}
        data-plasmic-override={overrides.div3}
        className={classNames(projectcss.all, sty.div3)}
      >
        <div
          data-plasmic-name={"div4"}
          data-plasmic-override={overrides.div4}
          className={classNames(projectcss.all, sty.div4)}
        >
          <div
            data-plasmic-name={
              "smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png"
            }
            data-plasmic-override={
              overrides.smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png
            }
            className={classNames(
              projectcss.all,
              sty.smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png
            )}
          />

          <div
            data-plasmic-name={"_0Nicotine"}
            data-plasmic-override={overrides._0Nicotine}
            className={classNames(projectcss.all, sty._0Nicotine)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gmnx
              )}
            >
              {"0% Nicotine"}
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div5"}
          data-plasmic-override={overrides.div5}
          className={classNames(projectcss.all, sty.div5)}
        >
          <div
            data-plasmic-name={
              "beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png"
            }
            data-plasmic-override={
              overrides.beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png
            }
            className={classNames(
              projectcss.all,
              sty.beakerIcon09Efe31Cb2E44C7F8A8Ff564E86Fe6E1480X480Png
            )}
          />

          <div
            data-plasmic-name={"labTested"}
            data-plasmic-override={overrides.labTested}
            className={classNames(projectcss.all, sty.labTested)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__i1FqJ
              )}
            >
              {"Lab-Tested"}
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div6"}
          data-plasmic-override={overrides.div6}
          className={classNames(projectcss.all, sty.div6)}
        >
          <div
            data-plasmic-name={
              "pillsIcon73726148C05B472793782519623Fd4A0480X480Png"
            }
            data-plasmic-override={
              overrides.pillsIcon73726148C05B472793782519623Fd4A0480X480Png
            }
            className={classNames(
              projectcss.all,
              sty.pillsIcon73726148C05B472793782519623Fd4A0480X480Png
            )}
          />

          <div
            data-plasmic-name={"vitamins"}
            data-plasmic-override={overrides.vitamins}
            className={classNames(projectcss.all, sty.vitamins)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x93Gq
              )}
            >
              {"Vitamins"}
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div7"}
          data-plasmic-override={overrides.div7}
          className={classNames(projectcss.all, sty.div7)}
        >
          <div
            data-plasmic-name={
              "recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png"
            }
            data-plasmic-override={
              overrides.recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png
            }
            className={classNames(
              projectcss.all,
              sty.recycleIcon1607Fa063A4B4D0Ba0A61Cd803B18C85480X480Png
            )}
          />

          <div
            data-plasmic-name={"recyclable"}
            data-plasmic-override={overrides.recyclable}
            className={classNames(projectcss.all, sty.recyclable)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___53W6P
              )}
            >
              {"Recyclable"}
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  div2: [
    "div2",
    "breatheVitaminAir",
    "div3",
    "div4",
    "smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png",
    "_0Nicotine",
    "div5",
    "beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png",
    "labTested",
    "div6",
    "pillsIcon73726148C05B472793782519623Fd4A0480X480Png",
    "vitamins",
    "div7",
    "recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png",
    "recyclable"
  ],
  breatheVitaminAir: ["breatheVitaminAir"],
  div3: [
    "div3",
    "div4",
    "smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png",
    "_0Nicotine",
    "div5",
    "beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png",
    "labTested",
    "div6",
    "pillsIcon73726148C05B472793782519623Fd4A0480X480Png",
    "vitamins",
    "div7",
    "recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png",
    "recyclable"
  ],
  div4: [
    "div4",
    "smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png",
    "_0Nicotine"
  ],
  smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png: [
    "smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png"
  ],
  _0Nicotine: ["_0Nicotine"],
  div5: [
    "div5",
    "beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png",
    "labTested"
  ],
  beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png: [
    "beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png"
  ],
  labTested: ["labTested"],
  div6: [
    "div6",
    "pillsIcon73726148C05B472793782519623Fd4A0480X480Png",
    "vitamins"
  ],
  pillsIcon73726148C05B472793782519623Fd4A0480X480Png: [
    "pillsIcon73726148C05B472793782519623Fd4A0480X480Png"
  ],
  vitamins: ["vitamins"],
  div7: [
    "div7",
    "recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png",
    "recyclable"
  ],
  recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png: [
    "recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png"
  ],
  recyclable: ["recyclable"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  div2: "div";
  breatheVitaminAir: "div";
  div3: "div";
  div4: "div";
  smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png: "div";
  _0Nicotine: "div";
  div5: "div";
  beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png: "div";
  labTested: "div";
  div6: "div";
  pillsIcon73726148C05B472793782519623Fd4A0480X480Png: "div";
  vitamins: "div";
  div7: "div";
  recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png: "div";
  recyclable: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHeadlineIcons414Px__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHeadlineIcons414Px__VariantsArgs;
    args?: PlasmicHeadlineIcons414Px__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHeadlineIcons414Px__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHeadlineIcons414Px__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHeadlineIcons414Px__ArgProps,
          internalVariantPropNames: PlasmicHeadlineIcons414Px__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHeadlineIcons414Px__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "div2") {
    func.displayName = "PlasmicHeadlineIcons414Px";
  } else {
    func.displayName = `PlasmicHeadlineIcons414Px.${nodeName}`;
  }
  return func;
}

export const PlasmicHeadlineIcons414Px = Object.assign(
  // Top-level PlasmicHeadlineIcons414Px renders the root element
  makeNodeComponent("div2"),
  {
    // Helper components rendering sub-elements
    breatheVitaminAir: makeNodeComponent("breatheVitaminAir"),
    div3: makeNodeComponent("div3"),
    div4: makeNodeComponent("div4"),
    smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png: makeNodeComponent(
      "smokingIconAc8544Ef2A784A929740Ba3C7312E5C5480X480Png"
    ),
    _0Nicotine: makeNodeComponent("_0Nicotine"),
    div5: makeNodeComponent("div5"),
    beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png: makeNodeComponent(
      "beakerIcon09Efe31CB2E44C7F8A8FF564E86Fe6E1480X480Png"
    ),
    labTested: makeNodeComponent("labTested"),
    div6: makeNodeComponent("div6"),
    pillsIcon73726148C05B472793782519623Fd4A0480X480Png: makeNodeComponent(
      "pillsIcon73726148C05B472793782519623Fd4A0480X480Png"
    ),
    vitamins: makeNodeComponent("vitamins"),
    div7: makeNodeComponent("div7"),
    recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png: makeNodeComponent(
      "recycleIcon1607Fa063A4B4D0BA0A61Cd803B18C85480X480Png"
    ),
    recyclable: makeNodeComponent("recyclable"),

    // Metadata about props expected for PlasmicHeadlineIcons414Px
    internalVariantProps: PlasmicHeadlineIcons414Px__VariantProps,
    internalArgProps: PlasmicHeadlineIcons414Px__ArgProps
  }
);

export default PlasmicHeadlineIcons414Px;
/* prettier-ignore-end */
