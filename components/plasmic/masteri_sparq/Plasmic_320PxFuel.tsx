// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: k_ZR2YmJHJoLI
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./Plasmic_320PxFuel.module.css"; // plasmic-import: k_ZR2YmJHJoLI/css

export type Plasmic_320PxFuel__VariantMembers = {};
export type Plasmic_320PxFuel__VariantsArgs = {};
type VariantPropType = keyof Plasmic_320PxFuel__VariantsArgs;
export const Plasmic_320PxFuel__VariantProps = new Array<VariantPropType>();

export type Plasmic_320PxFuel__ArgsType = {};
type ArgPropType = keyof Plasmic_320PxFuel__ArgsType;
export const Plasmic_320PxFuel__ArgProps = new Array<ArgPropType>();

export type Plasmic_320PxFuel__OverridesType = {
  div163?: p.Flex<"div">;
  a15?: p.Flex<"div">;
  productFuel250X2502Xjpg3?: p.Flex<"a"> & Partial<LinkProps>;
  div164?: p.Flex<"div">;
  _43Rating447Votes11?: p.Flex<"div">;
  i51?: p.Flex<"div">;
  i52?: p.Flex<"div">;
  i53?: p.Flex<"div">;
  i54?: p.Flex<"div">;
  i55?: p.Flex<"div">;
  form11?: p.Flex<"div">;
  div165?: p.Flex<"div">;
  div166?: p.Flex<"div">;
  div167?: p.Flex<"div">;
  div168?: p.Flex<"a"> & Partial<LinkProps>;
  label21?: p.Flex<"div">;
  strawberry11?: p.Flex<"div">;
  div169?: p.Flex<"a"> & Partial<LinkProps>;
  label22?: p.Flex<"div">;
  vanilla11?: p.Flex<"div">;
  div170?: p.Flex<"div">;
  buttonAddToCart106242076283?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface Default_320PxFuelProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_320PxFuel__RenderFunc(props: {
  variants: Plasmic_320PxFuel__VariantsArgs;
  args: Plasmic_320PxFuel__ArgsType;
  overrides: Plasmic_320PxFuel__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"div163"}
      data-plasmic-override={overrides.div163}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.div163
      )}
    >
      <div
        data-plasmic-name={"a15"}
        data-plasmic-override={overrides.a15}
        className={classNames(projectcss.all, sty.a15)}
      >
        <p.PlasmicLink
          data-plasmic-name={"productFuel250X2502Xjpg3"}
          data-plasmic-override={overrides.productFuel250X2502Xjpg3}
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.productFuel250X2502Xjpg3
          )}
          component={Link}
          href={
            "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/fuel?variant=39394788108" as const
          }
          platform={"nextjs"}
        />

        <div
          data-plasmic-name={"div164"}
          data-plasmic-override={overrides.div164}
          className={classNames(projectcss.all, sty.div164)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wHEad
            )}
          >
            {"Fuel"}
          </div>

          <div
            data-plasmic-name={"_43Rating447Votes11"}
            data-plasmic-override={overrides._43Rating447Votes11}
            className={classNames(projectcss.all, sty._43Rating447Votes11)}
          >
            <div
              data-plasmic-name={"i51"}
              data-plasmic-override={overrides.i51}
              className={classNames(projectcss.all, sty.i51)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0Uvm
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i52"}
              data-plasmic-override={overrides.i52}
              className={classNames(projectcss.all, sty.i52)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__djNk
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i53"}
              data-plasmic-override={overrides.i53}
              className={classNames(projectcss.all, sty.i53)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yaQme
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i54"}
              data-plasmic-override={overrides.i54}
              className={classNames(projectcss.all, sty.i54)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__u1SU5
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              data-plasmic-name={"i55"}
              data-plasmic-override={overrides.i55}
              className={classNames(projectcss.all, sty.i55)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lStlG
                )}
              >
                {"★"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ihegH
              )}
            >
              {"(447)"}
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__tpEvs
            )}
          >
            {"$20"}
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__h7Yb
            )}
          >
            {"Energy-Enhancing"}
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"form11"}
        data-plasmic-override={overrides.form11}
        className={classNames(projectcss.all, sty.form11)}
      >
        <div
          data-plasmic-name={"div165"}
          data-plasmic-override={overrides.div165}
          className={classNames(projectcss.all, sty.div165)}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"div166"}
            data-plasmic-override={overrides.div166}
            hasGap={true}
            className={classNames(projectcss.all, sty.div166)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__sjlm0
              )}
            >
              {"Choose Flavor"}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"div167"}
              data-plasmic-override={overrides.div167}
              hasGap={true}
              className={classNames(projectcss.all, sty.div167)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div168"}
                data-plasmic-override={overrides.div168}
                className={classNames(projectcss.all, projectcss.a, sty.div168)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/fuel?variant=39394788108" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label21"}
                  data-plasmic-override={overrides.label21}
                  className={classNames(projectcss.all, sty.label21)}
                />

                <div
                  data-plasmic-name={"strawberry11"}
                  data-plasmic-override={overrides.strawberry11}
                  className={classNames(projectcss.all, sty.strawberry11)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wZ43M
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div169"}
                data-plasmic-override={overrides.div169}
                className={classNames(projectcss.all, projectcss.a, sty.div169)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/fuel?variant=39394788108" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label22"}
                  data-plasmic-override={overrides.label22}
                  className={classNames(projectcss.all, sty.label22)}
                />

                <div
                  data-plasmic-name={"vanilla11"}
                  data-plasmic-override={overrides.vanilla11}
                  className={classNames(projectcss.all, sty.vanilla11)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ovInC
                    )}
                  >
                    {"Vanilla"}
                  </div>
                </div>
              </p.PlasmicLink>
            </p.Stack>
          </p.Stack>
        </div>

        <div
          data-plasmic-name={"div170"}
          data-plasmic-override={overrides.div170}
          className={classNames(projectcss.all, sty.div170)}
        >
          <p.PlasmicLink
            data-plasmic-name={"buttonAddToCart106242076283"}
            data-plasmic-override={overrides.buttonAddToCart106242076283}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.buttonAddToCart106242076283
            )}
            component={Link}
            href={
              "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/fuel?variant=39394788108" as const
            }
            platform={"nextjs"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oA8Wc
              )}
            >
              {"SHOP NOW"}
            </div>
          </p.PlasmicLink>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  div163: [
    "div163",
    "a15",
    "productFuel250X2502Xjpg3",
    "div164",
    "_43Rating447Votes11",
    "i51",
    "i52",
    "i53",
    "i54",
    "i55",
    "form11",
    "div165",
    "div166",
    "div167",
    "div168",
    "label21",
    "strawberry11",
    "div169",
    "label22",
    "vanilla11",
    "div170",
    "buttonAddToCart106242076283"
  ],
  a15: [
    "a15",
    "productFuel250X2502Xjpg3",
    "div164",
    "_43Rating447Votes11",
    "i51",
    "i52",
    "i53",
    "i54",
    "i55"
  ],
  productFuel250X2502Xjpg3: ["productFuel250X2502Xjpg3"],
  div164: ["div164", "_43Rating447Votes11", "i51", "i52", "i53", "i54", "i55"],
  _43Rating447Votes11: [
    "_43Rating447Votes11",
    "i51",
    "i52",
    "i53",
    "i54",
    "i55"
  ],
  i51: ["i51"],
  i52: ["i52"],
  i53: ["i53"],
  i54: ["i54"],
  i55: ["i55"],
  form11: [
    "form11",
    "div165",
    "div166",
    "div167",
    "div168",
    "label21",
    "strawberry11",
    "div169",
    "label22",
    "vanilla11",
    "div170",
    "buttonAddToCart106242076283"
  ],
  div165: [
    "div165",
    "div166",
    "div167",
    "div168",
    "label21",
    "strawberry11",
    "div169",
    "label22",
    "vanilla11"
  ],
  div166: [
    "div166",
    "div167",
    "div168",
    "label21",
    "strawberry11",
    "div169",
    "label22",
    "vanilla11"
  ],
  div167: [
    "div167",
    "div168",
    "label21",
    "strawberry11",
    "div169",
    "label22",
    "vanilla11"
  ],
  div168: ["div168", "label21", "strawberry11"],
  label21: ["label21"],
  strawberry11: ["strawberry11"],
  div169: ["div169", "label22", "vanilla11"],
  label22: ["label22"],
  vanilla11: ["vanilla11"],
  div170: ["div170", "buttonAddToCart106242076283"],
  buttonAddToCart106242076283: ["buttonAddToCart106242076283"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  div163: "div";
  a15: "div";
  productFuel250X2502Xjpg3: "a";
  div164: "div";
  _43Rating447Votes11: "div";
  i51: "div";
  i52: "div";
  i53: "div";
  i54: "div";
  i55: "div";
  form11: "div";
  div165: "div";
  div166: "div";
  div167: "div";
  div168: "a";
  label21: "div";
  strawberry11: "div";
  div169: "a";
  label22: "div";
  vanilla11: "div";
  div170: "div";
  buttonAddToCart106242076283: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_320PxFuel__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_320PxFuel__VariantsArgs;
    args?: Plasmic_320PxFuel__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_320PxFuel__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_320PxFuel__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic_320PxFuel__ArgProps,
          internalVariantPropNames: Plasmic_320PxFuel__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_320PxFuel__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "div163") {
    func.displayName = "Plasmic_320PxFuel";
  } else {
    func.displayName = `Plasmic_320PxFuel.${nodeName}`;
  }
  return func;
}

export const Plasmic_320PxFuel = Object.assign(
  // Top-level Plasmic_320PxFuel renders the root element
  makeNodeComponent("div163"),
  {
    // Helper components rendering sub-elements
    a15: makeNodeComponent("a15"),
    productFuel250X2502Xjpg3: makeNodeComponent("productFuel250X2502Xjpg3"),
    div164: makeNodeComponent("div164"),
    _43Rating447Votes11: makeNodeComponent("_43Rating447Votes11"),
    i51: makeNodeComponent("i51"),
    i52: makeNodeComponent("i52"),
    i53: makeNodeComponent("i53"),
    i54: makeNodeComponent("i54"),
    i55: makeNodeComponent("i55"),
    form11: makeNodeComponent("form11"),
    div165: makeNodeComponent("div165"),
    div166: makeNodeComponent("div166"),
    div167: makeNodeComponent("div167"),
    div168: makeNodeComponent("div168"),
    label21: makeNodeComponent("label21"),
    strawberry11: makeNodeComponent("strawberry11"),
    div169: makeNodeComponent("div169"),
    label22: makeNodeComponent("label22"),
    vanilla11: makeNodeComponent("vanilla11"),
    div170: makeNodeComponent("div170"),
    buttonAddToCart106242076283: makeNodeComponent(
      "buttonAddToCart106242076283"
    ),

    // Metadata about props expected for Plasmic_320PxFuel
    internalVariantProps: Plasmic_320PxFuel__VariantProps,
    internalArgProps: Plasmic_320PxFuel__ArgProps
  }
);

export default Plasmic_320PxFuel;
/* prettier-ignore-end */
