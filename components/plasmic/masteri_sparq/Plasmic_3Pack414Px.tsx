// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: 0H_YF9nXzcED7
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./Plasmic_3Pack414Px.module.css"; // plasmic-import: 0H_YF9nXzcED7/css

export type Plasmic_3Pack414Px__VariantMembers = {};
export type Plasmic_3Pack414Px__VariantsArgs = {};
type VariantPropType = keyof Plasmic_3Pack414Px__VariantsArgs;
export const Plasmic_3Pack414Px__VariantProps = new Array<VariantPropType>();

export type Plasmic_3Pack414Px__ArgsType = {};
type ArgPropType = keyof Plasmic_3Pack414Px__ArgsType;
export const Plasmic_3Pack414Px__ArgProps = new Array<ArgPropType>();

export type Plasmic_3Pack414Px__OverridesType = {
  div35?: p.Flex<"div">;
  a4?: p.Flex<"div">;
  productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg?: p.Flex<"a"> &
    Partial<LinkProps>;
  div36?: p.Flex<"div">;
  _43Rating447Votes4?: p.Flex<"div">;
  i16?: p.Flex<"div">;
  i17?: p.Flex<"div">;
  i18?: p.Flex<"div">;
  i19?: p.Flex<"div">;
  i20?: p.Flex<"div">;
  div37?: p.Flex<"a"> & Partial<LinkProps>;
  span?: p.Flex<"div">;
  bestSeller?: p.Flex<"div">;
  form4?: p.Flex<"div">;
  div38?: p.Flex<"div">;
  div39?: p.Flex<"div">;
  div40?: p.Flex<"div">;
  div41?: p.Flex<"a"> & Partial<LinkProps>;
  label7?: p.Flex<"div">;
  strawberry4?: p.Flex<"div">;
  div42?: p.Flex<"a"> & Partial<LinkProps>;
  label8?: p.Flex<"div">;
  vanilla4?: p.Flex<"div">;
  div43?: p.Flex<"div">;
  buttonAddToCart4332494454853?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface Default_3Pack414PxProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_3Pack414Px__RenderFunc(props: {
  variants: Plasmic_3Pack414Px__VariantsArgs;
  args: Plasmic_3Pack414Px__ArgsType;
  overrides: Plasmic_3Pack414Px__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"div35"}
      data-plasmic-override={overrides.div35}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.div35
      )}
    >
      <div
        data-plasmic-name={"a4"}
        data-plasmic-override={overrides.a4}
        className={classNames(projectcss.all, sty.a4)}
      >
        <p.PlasmicLink
          data-plasmic-name={
            "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg"
          }
          data-plasmic-override={
            overrides.productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg
          }
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg
          )}
          component={Link}
          href={
            "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
          }
          platform={"nextjs"}
        />

        <div
          data-plasmic-name={"div36"}
          data-plasmic-override={overrides.div36}
          className={classNames(projectcss.all, sty.div36)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__kKxKq
            )}
          >
            {"Vitamin Air 3-Pack"}
          </div>

          <div
            data-plasmic-name={"_43Rating447Votes4"}
            data-plasmic-override={overrides._43Rating447Votes4}
            className={classNames(projectcss.all, sty._43Rating447Votes4)}
          >
            <div
              data-plasmic-name={"i16"}
              data-plasmic-override={overrides.i16}
              className={classNames(projectcss.all, sty.i16)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__poDoc
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i17"}
              data-plasmic-override={overrides.i17}
              className={classNames(projectcss.all, sty.i17)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sBbo4
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i18"}
              data-plasmic-override={overrides.i18}
              className={classNames(projectcss.all, sty.i18)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vqUbM
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i19"}
              data-plasmic-override={overrides.i19}
              className={classNames(projectcss.all, sty.i19)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hfqA2
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i20"}
              data-plasmic-override={overrides.i20}
              className={classNames(projectcss.all, sty.i20)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3XeiL
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uSiXw
              )}
            >
              {"(447)"}
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qwz0
            )}
          >
            {"$56"}
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__dl5GR
            )}
          >
            {"(One of each formulation)"}
          </div>
        </div>

        <p.PlasmicLink
          data-plasmic-name={"div37"}
          data-plasmic-override={overrides.div37}
          className={classNames(projectcss.all, projectcss.a, sty.div37)}
          component={Link}
          href={
            "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
          }
          platform={"nextjs"}
        >
          <div
            data-plasmic-name={"span"}
            data-plasmic-override={overrides.span}
            className={classNames(projectcss.all, sty.span)}
          >
            <div
              data-plasmic-name={"bestSeller"}
              data-plasmic-override={overrides.bestSeller}
              className={classNames(projectcss.all, sty.bestSeller)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__t7Czr
              )}
            >
              {"BEST SELLER!"}
            </div>
          </div>
        </p.PlasmicLink>
      </div>

      <div
        data-plasmic-name={"form4"}
        data-plasmic-override={overrides.form4}
        className={classNames(projectcss.all, sty.form4)}
      >
        <div
          data-plasmic-name={"div38"}
          data-plasmic-override={overrides.div38}
          className={classNames(projectcss.all, sty.div38)}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"div39"}
            data-plasmic-override={overrides.div39}
            hasGap={true}
            className={classNames(projectcss.all, sty.div39)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qwR8M
              )}
            >
              {"Choose Flavor"}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"div40"}
              data-plasmic-override={overrides.div40}
              hasGap={true}
              className={classNames(projectcss.all, sty.div40)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div41"}
                data-plasmic-override={overrides.div41}
                className={classNames(projectcss.all, projectcss.a, sty.div41)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label7"}
                  data-plasmic-override={overrides.label7}
                  className={classNames(projectcss.all, sty.label7)}
                />

                <div
                  data-plasmic-name={"strawberry4"}
                  data-plasmic-override={overrides.strawberry4}
                  className={classNames(projectcss.all, sty.strawberry4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g210P
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div42"}
                data-plasmic-override={overrides.div42}
                className={classNames(projectcss.all, projectcss.a, sty.div42)}
                component={Link}
                href={
                  "https://www.sparqlife.com/collections/all/products/3-pack?variant=31099464155205" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label8"}
                  data-plasmic-override={overrides.label8}
                  className={classNames(projectcss.all, sty.label8)}
                />

                <div
                  data-plasmic-name={"vanilla4"}
                  data-plasmic-override={overrides.vanilla4}
                  className={classNames(projectcss.all, sty.vanilla4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nDtg
                    )}
                  >
                    {"Vanilla"}
                  </div>
                </div>
              </p.PlasmicLink>
            </p.Stack>
          </p.Stack>
        </div>

        <div
          data-plasmic-name={"div43"}
          data-plasmic-override={overrides.div43}
          className={classNames(projectcss.all, sty.div43)}
        >
          <p.PlasmicLink
            data-plasmic-name={"buttonAddToCart4332494454853"}
            data-plasmic-override={overrides.buttonAddToCart4332494454853}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.buttonAddToCart4332494454853
            )}
            component={Link}
            href={
              "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
            }
            platform={"nextjs"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__f5H9V
              )}
            >
              {"SHOP NOW"}
            </div>
          </p.PlasmicLink>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  div35: [
    "div35",
    "a4",
    "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg",
    "div36",
    "_43Rating447Votes4",
    "i16",
    "i17",
    "i18",
    "i19",
    "i20",
    "div37",
    "span",
    "bestSeller",
    "form4",
    "div38",
    "div39",
    "div40",
    "div41",
    "label7",
    "strawberry4",
    "div42",
    "label8",
    "vanilla4",
    "div43",
    "buttonAddToCart4332494454853"
  ],
  a4: [
    "a4",
    "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg",
    "div36",
    "_43Rating447Votes4",
    "i16",
    "i17",
    "i18",
    "i19",
    "i20",
    "div37",
    "span",
    "bestSeller"
  ],
  productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg: [
    "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg"
  ],
  div36: ["div36", "_43Rating447Votes4", "i16", "i17", "i18", "i19", "i20"],
  _43Rating447Votes4: ["_43Rating447Votes4", "i16", "i17", "i18", "i19", "i20"],
  i16: ["i16"],
  i17: ["i17"],
  i18: ["i18"],
  i19: ["i19"],
  i20: ["i20"],
  div37: ["div37", "span", "bestSeller"],
  span: ["span", "bestSeller"],
  bestSeller: ["bestSeller"],
  form4: [
    "form4",
    "div38",
    "div39",
    "div40",
    "div41",
    "label7",
    "strawberry4",
    "div42",
    "label8",
    "vanilla4",
    "div43",
    "buttonAddToCart4332494454853"
  ],
  div38: [
    "div38",
    "div39",
    "div40",
    "div41",
    "label7",
    "strawberry4",
    "div42",
    "label8",
    "vanilla4"
  ],
  div39: [
    "div39",
    "div40",
    "div41",
    "label7",
    "strawberry4",
    "div42",
    "label8",
    "vanilla4"
  ],
  div40: [
    "div40",
    "div41",
    "label7",
    "strawberry4",
    "div42",
    "label8",
    "vanilla4"
  ],
  div41: ["div41", "label7", "strawberry4"],
  label7: ["label7"],
  strawberry4: ["strawberry4"],
  div42: ["div42", "label8", "vanilla4"],
  label8: ["label8"],
  vanilla4: ["vanilla4"],
  div43: ["div43", "buttonAddToCart4332494454853"],
  buttonAddToCart4332494454853: ["buttonAddToCart4332494454853"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  div35: "div";
  a4: "div";
  productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg: "a";
  div36: "div";
  _43Rating447Votes4: "div";
  i16: "div";
  i17: "div";
  i18: "div";
  i19: "div";
  i20: "div";
  div37: "a";
  span: "div";
  bestSeller: "div";
  form4: "div";
  div38: "div";
  div39: "div";
  div40: "div";
  div41: "a";
  label7: "div";
  strawberry4: "div";
  div42: "a";
  label8: "div";
  vanilla4: "div";
  div43: "div";
  buttonAddToCart4332494454853: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_3Pack414Px__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_3Pack414Px__VariantsArgs;
    args?: Plasmic_3Pack414Px__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_3Pack414Px__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_3Pack414Px__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic_3Pack414Px__ArgProps,
          internalVariantPropNames: Plasmic_3Pack414Px__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_3Pack414Px__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "div35") {
    func.displayName = "Plasmic_3Pack414Px";
  } else {
    func.displayName = `Plasmic_3Pack414Px.${nodeName}`;
  }
  return func;
}

export const Plasmic_3Pack414Px = Object.assign(
  // Top-level Plasmic_3Pack414Px renders the root element
  makeNodeComponent("div35"),
  {
    // Helper components rendering sub-elements
    a4: makeNodeComponent("a4"),
    productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg:
      makeNodeComponent(
        "productVariety1C2E7Bd9Ac9C4989Bfad811526Dad7E0250X2502Xjpg"
      ),
    div36: makeNodeComponent("div36"),
    _43Rating447Votes4: makeNodeComponent("_43Rating447Votes4"),
    i16: makeNodeComponent("i16"),
    i17: makeNodeComponent("i17"),
    i18: makeNodeComponent("i18"),
    i19: makeNodeComponent("i19"),
    i20: makeNodeComponent("i20"),
    div37: makeNodeComponent("div37"),
    span: makeNodeComponent("span"),
    bestSeller: makeNodeComponent("bestSeller"),
    form4: makeNodeComponent("form4"),
    div38: makeNodeComponent("div38"),
    div39: makeNodeComponent("div39"),
    div40: makeNodeComponent("div40"),
    div41: makeNodeComponent("div41"),
    label7: makeNodeComponent("label7"),
    strawberry4: makeNodeComponent("strawberry4"),
    div42: makeNodeComponent("div42"),
    label8: makeNodeComponent("label8"),
    vanilla4: makeNodeComponent("vanilla4"),
    div43: makeNodeComponent("div43"),
    buttonAddToCart4332494454853: makeNodeComponent(
      "buttonAddToCart4332494454853"
    ),

    // Metadata about props expected for Plasmic_3Pack414Px
    internalVariantProps: Plasmic_3Pack414Px__VariantProps,
    internalArgProps: Plasmic_3Pack414Px__ArgProps
  }
);

export default Plasmic_3Pack414Px;
/* prettier-ignore-end */
