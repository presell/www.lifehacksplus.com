// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: u5rWtT0YY4XcR
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantssuXxHpH6GpmS } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: SUXxHpH6GpmS/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./PlasmicPromissoryCommitment1440Px.module.css"; // plasmic-import: u5rWtT0YY4XcR/css

export type PlasmicPromissoryCommitment1440Px__VariantMembers = {};
export type PlasmicPromissoryCommitment1440Px__VariantsArgs = {};
type VariantPropType = keyof PlasmicPromissoryCommitment1440Px__VariantsArgs;
export const PlasmicPromissoryCommitment1440Px__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPromissoryCommitment1440Px__ArgsType = {};
type ArgPropType = keyof PlasmicPromissoryCommitment1440Px__ArgsType;
export const PlasmicPromissoryCommitment1440Px__ArgProps =
  new Array<ArgPropType>();

export type PlasmicPromissoryCommitment1440Px__OverridesType = {
  section2?: p.Flex<"div">;
  div131?: p.Flex<"div">;
  promissoryCommitment2?: p.Flex<"div">;
  div151?: p.Flex<"div">;
  safetyPractices480X480Png2?: p.Flex<"div">;
  safetyPractices2?: p.Flex<"div">;
  weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2?: p.Flex<"div">;
  div152?: p.Flex<"div">;
  extensiveScientificResearch480X480Png2?: p.Flex<"div">;
  extensiveScientificResearch2?: p.Flex<"div">;
  weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2?: p.Flex<"div">;
  div153?: p.Flex<"div">;
  environmentallyResponsible480X480Png2?: p.Flex<"div">;
  environmentallyResponsible2?: p.Flex<"div">;
  weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2?: p.Flex<"div">;
  div154?: p.Flex<"div">;
  givingBack480X480Png2?: p.Flex<"div">;
  givingBack2?: p.Flex<"div">;
  weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2?: p.Flex<"div">;
};

export interface DefaultPromissoryCommitment1440PxProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPromissoryCommitment1440Px__RenderFunc(props: {
  variants: PlasmicPromissoryCommitment1440Px__VariantsArgs;
  args: PlasmicPromissoryCommitment1440Px__ArgsType;
  overrides: PlasmicPromissoryCommitment1440Px__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssuXxHpH6GpmS()
  });

  return (
    <div
      data-plasmic-name={"section2"}
      data-plasmic-override={overrides.section2}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.section2
      )}
    >
      <div
        data-plasmic-name={"div131"}
        data-plasmic-override={overrides.div131}
        className={classNames(projectcss.all, sty.div131)}
      >
        <div
          data-plasmic-name={"promissoryCommitment2"}
          data-plasmic-override={overrides.promissoryCommitment2}
          className={classNames(projectcss.all, sty.promissoryCommitment2)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rElno
            )}
          >
            {"Promissory Commitment"}
          </div>
        </div>

        <div
          data-plasmic-name={"div151"}
          data-plasmic-override={overrides.div151}
          className={classNames(projectcss.all, sty.div151)}
        >
          <div
            data-plasmic-name={"safetyPractices480X480Png2"}
            data-plasmic-override={overrides.safetyPractices480X480Png2}
            className={classNames(
              projectcss.all,
              sty.safetyPractices480X480Png2
            )}
          />

          <div
            data-plasmic-name={"safetyPractices2"}
            data-plasmic-override={overrides.safetyPractices2}
            className={classNames(projectcss.all, sty.safetyPractices2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nFndR
              )}
            >
              {"Safety Practices"}
            </div>
          </div>

          <div
            data-plasmic-name={
              "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2"
            }
            data-plasmic-override={
              overrides.weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2
            }
            className={classNames(
              projectcss.all,
              sty.weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ghOm
              )}
            >
              {
                "We live by the Hippocratic Oath: First do no harm. Our products are made without nicotine or harmful chemicals."
              }
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div152"}
          data-plasmic-override={overrides.div152}
          className={classNames(projectcss.all, sty.div152)}
        >
          <div
            data-plasmic-name={"extensiveScientificResearch480X480Png2"}
            data-plasmic-override={
              overrides.extensiveScientificResearch480X480Png2
            }
            className={classNames(
              projectcss.all,
              sty.extensiveScientificResearch480X480Png2
            )}
          />

          <div
            data-plasmic-name={"extensiveScientificResearch2"}
            data-plasmic-override={overrides.extensiveScientificResearch2}
            className={classNames(
              projectcss.all,
              sty.extensiveScientificResearch2
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nDu8N
              )}
            >
              {"Extensive Scientific Research"}
            </div>
          </div>

          <div
            data-plasmic-name={
              "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2"
            }
            data-plasmic-override={
              overrides.weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2
            }
            className={classNames(
              projectcss.all,
              sty.weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nEbdE
              )}
            >
              {
                "We ensure all our products are formulated under the direction of a renowned inhalation toxicologist and tested by an ISO-accredited independent laboratory."
              }
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div153"}
          data-plasmic-override={overrides.div153}
          className={classNames(projectcss.all, sty.div153)}
        >
          <div
            data-plasmic-name={"environmentallyResponsible480X480Png2"}
            data-plasmic-override={
              overrides.environmentallyResponsible480X480Png2
            }
            className={classNames(
              projectcss.all,
              sty.environmentallyResponsible480X480Png2
            )}
          />

          <div
            data-plasmic-name={"environmentallyResponsible2"}
            data-plasmic-override={overrides.environmentallyResponsible2}
            className={classNames(
              projectcss.all,
              sty.environmentallyResponsible2
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fWSvL
              )}
            >
              {"Environmentally Responsible"}
            </div>
          </div>

          <div
            data-plasmic-name={
              "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2"
            }
            data-plasmic-override={
              overrides.weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2
            }
            className={classNames(
              projectcss.all,
              sty.weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___7Z3T
              )}
            >
              {
                "We seek to inspire a culture of environmental sensitivity through sustainable product design and ethical business practices."
              }
            </div>
          </div>
        </div>

        {(hasVariant(globalVariants, "screen", "desktopOnly") ? true : true) ? (
          <div
            data-plasmic-name={"div154"}
            data-plasmic-override={overrides.div154}
            className={classNames(projectcss.all, sty.div154)}
          >
            <div
              data-plasmic-name={"givingBack480X480Png2"}
              data-plasmic-override={overrides.givingBack480X480Png2}
              className={classNames(projectcss.all, sty.givingBack480X480Png2)}
            />

            <div
              data-plasmic-name={"givingBack2"}
              data-plasmic-override={overrides.givingBack2}
              className={classNames(projectcss.all, sty.givingBack2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__icfY
                )}
              >
                {"Giving Back"}
              </div>
            </div>

            <div
              data-plasmic-name={
                "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2"
              }
              data-plasmic-override={
                overrides.weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2
              }
              className={classNames(
                projectcss.all,
                sty.weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jKjyp
                )}
              >
                {
                  "We use a percentage of your purchase to empower innovative start-ups to solve humanity's most pressing environmental challenges."
                }
              </div>
            </div>
          </div>
        ) : null}
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  section2: [
    "section2",
    "div131",
    "promissoryCommitment2",
    "div151",
    "safetyPractices480X480Png2",
    "safetyPractices2",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2",
    "div152",
    "extensiveScientificResearch480X480Png2",
    "extensiveScientificResearch2",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2",
    "div153",
    "environmentallyResponsible480X480Png2",
    "environmentallyResponsible2",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2",
    "div154",
    "givingBack480X480Png2",
    "givingBack2",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2"
  ],
  div131: [
    "div131",
    "promissoryCommitment2",
    "div151",
    "safetyPractices480X480Png2",
    "safetyPractices2",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2",
    "div152",
    "extensiveScientificResearch480X480Png2",
    "extensiveScientificResearch2",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2",
    "div153",
    "environmentallyResponsible480X480Png2",
    "environmentallyResponsible2",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2",
    "div154",
    "givingBack480X480Png2",
    "givingBack2",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2"
  ],
  promissoryCommitment2: ["promissoryCommitment2"],
  div151: [
    "div151",
    "safetyPractices480X480Png2",
    "safetyPractices2",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2"
  ],
  safetyPractices480X480Png2: ["safetyPractices480X480Png2"],
  safetyPractices2: ["safetyPractices2"],
  weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2:
    [
      "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2"
    ],
  div152: [
    "div152",
    "extensiveScientificResearch480X480Png2",
    "extensiveScientificResearch2",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2"
  ],
  extensiveScientificResearch480X480Png2: [
    "extensiveScientificResearch480X480Png2"
  ],
  extensiveScientificResearch2: ["extensiveScientificResearch2"],
  weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2:
    [
      "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2"
    ],
  div153: [
    "div153",
    "environmentallyResponsible480X480Png2",
    "environmentallyResponsible2",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2"
  ],
  environmentallyResponsible480X480Png2: [
    "environmentallyResponsible480X480Png2"
  ],
  environmentallyResponsible2: ["environmentallyResponsible2"],
  weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2:
    [
      "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2"
    ],
  div154: [
    "div154",
    "givingBack480X480Png2",
    "givingBack2",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2"
  ],
  givingBack480X480Png2: ["givingBack480X480Png2"],
  givingBack2: ["givingBack2"],
  weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2:
    [
      "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2"
    ]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  section2: "div";
  div131: "div";
  promissoryCommitment2: "div";
  div151: "div";
  safetyPractices480X480Png2: "div";
  safetyPractices2: "div";
  weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2: "div";
  div152: "div";
  extensiveScientificResearch480X480Png2: "div";
  extensiveScientificResearch2: "div";
  weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2: "div";
  div153: "div";
  environmentallyResponsible480X480Png2: "div";
  environmentallyResponsible2: "div";
  weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2: "div";
  div154: "div";
  givingBack480X480Png2: "div";
  givingBack2: "div";
  weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPromissoryCommitment1440Px__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPromissoryCommitment1440Px__VariantsArgs;
    args?: PlasmicPromissoryCommitment1440Px__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPromissoryCommitment1440Px__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPromissoryCommitment1440Px__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPromissoryCommitment1440Px__ArgProps,
          internalVariantPropNames:
            PlasmicPromissoryCommitment1440Px__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPromissoryCommitment1440Px__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "section2") {
    func.displayName = "PlasmicPromissoryCommitment1440Px";
  } else {
    func.displayName = `PlasmicPromissoryCommitment1440Px.${nodeName}`;
  }
  return func;
}

export const PlasmicPromissoryCommitment1440Px = Object.assign(
  // Top-level PlasmicPromissoryCommitment1440Px renders the root element
  makeNodeComponent("section2"),
  {
    // Helper components rendering sub-elements
    div131: makeNodeComponent("div131"),
    promissoryCommitment2: makeNodeComponent("promissoryCommitment2"),
    div151: makeNodeComponent("div151"),
    safetyPractices480X480Png2: makeNodeComponent("safetyPractices480X480Png2"),
    safetyPractices2: makeNodeComponent("safetyPractices2"),
    weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2:
      makeNodeComponent(
        "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals2"
      ),
    div152: makeNodeComponent("div152"),
    extensiveScientificResearch480X480Png2: makeNodeComponent(
      "extensiveScientificResearch480X480Png2"
    ),
    extensiveScientificResearch2: makeNodeComponent(
      "extensiveScientificResearch2"
    ),
    weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2:
      makeNodeComponent(
        "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory2"
      ),
    div153: makeNodeComponent("div153"),
    environmentallyResponsible480X480Png2: makeNodeComponent(
      "environmentallyResponsible480X480Png2"
    ),
    environmentallyResponsible2: makeNodeComponent(
      "environmentallyResponsible2"
    ),
    weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2:
      makeNodeComponent(
        "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices2"
      ),
    div154: makeNodeComponent("div154"),
    givingBack480X480Png2: makeNodeComponent("givingBack480X480Png2"),
    givingBack2: makeNodeComponent("givingBack2"),
    weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2:
      makeNodeComponent(
        "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges2"
      ),

    // Metadata about props expected for PlasmicPromissoryCommitment1440Px
    internalVariantProps: PlasmicPromissoryCommitment1440Px__VariantProps,
    internalArgProps: PlasmicPromissoryCommitment1440Px__ArgProps
  }
);

export default PlasmicPromissoryCommitment1440Px;
/* prettier-ignore-end */
