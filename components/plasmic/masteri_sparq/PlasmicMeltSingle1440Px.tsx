// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: X-5GGa12Q1UBv
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./PlasmicMeltSingle1440Px.module.css"; // plasmic-import: X-5GGa12Q1UBv/css

export type PlasmicMeltSingle1440Px__VariantMembers = {};
export type PlasmicMeltSingle1440Px__VariantsArgs = {};
type VariantPropType = keyof PlasmicMeltSingle1440Px__VariantsArgs;
export const PlasmicMeltSingle1440Px__VariantProps =
  new Array<VariantPropType>();

export type PlasmicMeltSingle1440Px__ArgsType = {};
type ArgPropType = keyof PlasmicMeltSingle1440Px__ArgsType;
export const PlasmicMeltSingle1440Px__ArgProps = new Array<ArgPropType>();

export type PlasmicMeltSingle1440Px__OverridesType = {
  div101?: p.Flex<"div">;
  a11?: p.Flex<"div">;
  productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2?: p.Flex<"a"> &
    Partial<LinkProps>;
  div102?: p.Flex<"div">;
  _43Rating447Votes8?: p.Flex<"div">;
  i36?: p.Flex<"div">;
  i37?: p.Flex<"div">;
  i38?: p.Flex<"div">;
  i39?: p.Flex<"div">;
  i40?: p.Flex<"div">;
  div103?: p.Flex<"div">;
  form8?: p.Flex<"div">;
  div104?: p.Flex<"div">;
  div105?: p.Flex<"div">;
  div106?: p.Flex<"div">;
  div107?: p.Flex<"a"> & Partial<LinkProps>;
  label15?: p.Flex<"div">;
  strawberry8?: p.Flex<"div">;
  div108?: p.Flex<"a"> & Partial<LinkProps>;
  label16?: p.Flex<"div">;
  vanilla8?: p.Flex<"div">;
  div109?: p.Flex<"div">;
  buttonAddToCart106242249722?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultMeltSingle1440PxProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicMeltSingle1440Px__RenderFunc(props: {
  variants: PlasmicMeltSingle1440Px__VariantsArgs;
  args: PlasmicMeltSingle1440Px__ArgsType;
  overrides: PlasmicMeltSingle1440Px__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"div101"}
      data-plasmic-override={overrides.div101}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.div101
      )}
    >
      <div
        data-plasmic-name={"a11"}
        data-plasmic-override={overrides.a11}
        className={classNames(projectcss.all, sty.a11)}
      >
        <p.PlasmicLink
          data-plasmic-name={
            "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2"
          }
          data-plasmic-override={
            overrides.productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2
          }
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.productMeltE5Ee4B8Cb3944Dfa969D133320737857250X2502Xjpg2
          )}
          component={Link}
          href={
            "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
          }
          platform={"nextjs"}
        />

        <div
          data-plasmic-name={"div102"}
          data-plasmic-override={overrides.div102}
          className={classNames(projectcss.all, sty.div102)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__d6GnC
            )}
          >
            {"Melt"}
          </div>

          <div
            data-plasmic-name={"_43Rating447Votes8"}
            data-plasmic-override={overrides._43Rating447Votes8}
            className={classNames(projectcss.all, sty._43Rating447Votes8)}
          >
            <div
              data-plasmic-name={"i36"}
              data-plasmic-override={overrides.i36}
              className={classNames(projectcss.all, sty.i36)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___22Yj
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i37"}
              data-plasmic-override={overrides.i37}
              className={classNames(projectcss.all, sty.i37)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oLhum
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i38"}
              data-plasmic-override={overrides.i38}
              className={classNames(projectcss.all, sty.i38)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9EOy8
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i39"}
              data-plasmic-override={overrides.i39}
              className={classNames(projectcss.all, sty.i39)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__grsS1
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              data-plasmic-name={"i40"}
              data-plasmic-override={overrides.i40}
              className={classNames(projectcss.all, sty.i40)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__drlLh
                )}
              >
                {"★\t"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__r1EC
              )}
            >
              {"(447)"}
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___7BvP
            )}
          >
            {"$20"}
          </div>

          <div
            data-plasmic-name={"div103"}
            data-plasmic-override={overrides.div103}
            className={classNames(projectcss.all, sty.div103)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aEc4E
              )}
            >
              {"Metabolism-Boosting"}
            </div>
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"form8"}
        data-plasmic-override={overrides.form8}
        className={classNames(projectcss.all, sty.form8)}
      >
        <div
          data-plasmic-name={"div104"}
          data-plasmic-override={overrides.div104}
          className={classNames(projectcss.all, sty.div104)}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"div105"}
            data-plasmic-override={overrides.div105}
            hasGap={true}
            className={classNames(projectcss.all, sty.div105)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mQ869
              )}
            >
              {"Choose Flavor"}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"div106"}
              data-plasmic-override={overrides.div106}
              hasGap={true}
              className={classNames(projectcss.all, sty.div106)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div107"}
                data-plasmic-override={overrides.div107}
                className={classNames(projectcss.all, projectcss.a, sty.div107)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label15"}
                  data-plasmic-override={overrides.label15}
                  className={classNames(projectcss.all, sty.label15)}
                />

                <div
                  data-plasmic-name={"strawberry8"}
                  data-plasmic-override={overrides.strawberry8}
                  className={classNames(projectcss.all, sty.strawberry8)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___63PqH
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div108"}
                data-plasmic-override={overrides.div108}
                className={classNames(projectcss.all, projectcss.a, sty.div108)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868940" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"label16"}
                  data-plasmic-override={overrides.label16}
                  className={classNames(projectcss.all, sty.label16)}
                />

                <div
                  data-plasmic-name={"vanilla8"}
                  data-plasmic-override={overrides.vanilla8}
                  className={classNames(projectcss.all, sty.vanilla8)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hr2Xp
                    )}
                  >
                    {"Vanilla"}
                  </div>
                </div>
              </p.PlasmicLink>
            </p.Stack>
          </p.Stack>
        </div>

        <div
          data-plasmic-name={"div109"}
          data-plasmic-override={overrides.div109}
          className={classNames(projectcss.all, sty.div109)}
        >
          <p.PlasmicLink
            data-plasmic-name={"buttonAddToCart106242249722"}
            data-plasmic-override={overrides.buttonAddToCart106242249722}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.buttonAddToCart106242249722
            )}
            component={Link}
            href={
              "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
            }
            platform={"nextjs"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___49YnM
              )}
            >
              {"SHOP NOW"}
            </div>
          </p.PlasmicLink>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  div101: [
    "div101",
    "a11",
    "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2",
    "div102",
    "_43Rating447Votes8",
    "i36",
    "i37",
    "i38",
    "i39",
    "i40",
    "div103",
    "form8",
    "div104",
    "div105",
    "div106",
    "div107",
    "label15",
    "strawberry8",
    "div108",
    "label16",
    "vanilla8",
    "div109",
    "buttonAddToCart106242249722"
  ],
  a11: [
    "a11",
    "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2",
    "div102",
    "_43Rating447Votes8",
    "i36",
    "i37",
    "i38",
    "i39",
    "i40",
    "div103"
  ],
  productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2: [
    "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2"
  ],
  div102: [
    "div102",
    "_43Rating447Votes8",
    "i36",
    "i37",
    "i38",
    "i39",
    "i40",
    "div103"
  ],
  _43Rating447Votes8: ["_43Rating447Votes8", "i36", "i37", "i38", "i39", "i40"],
  i36: ["i36"],
  i37: ["i37"],
  i38: ["i38"],
  i39: ["i39"],
  i40: ["i40"],
  div103: ["div103"],
  form8: [
    "form8",
    "div104",
    "div105",
    "div106",
    "div107",
    "label15",
    "strawberry8",
    "div108",
    "label16",
    "vanilla8",
    "div109",
    "buttonAddToCart106242249722"
  ],
  div104: [
    "div104",
    "div105",
    "div106",
    "div107",
    "label15",
    "strawberry8",
    "div108",
    "label16",
    "vanilla8"
  ],
  div105: [
    "div105",
    "div106",
    "div107",
    "label15",
    "strawberry8",
    "div108",
    "label16",
    "vanilla8"
  ],
  div106: [
    "div106",
    "div107",
    "label15",
    "strawberry8",
    "div108",
    "label16",
    "vanilla8"
  ],
  div107: ["div107", "label15", "strawberry8"],
  label15: ["label15"],
  strawberry8: ["strawberry8"],
  div108: ["div108", "label16", "vanilla8"],
  label16: ["label16"],
  vanilla8: ["vanilla8"],
  div109: ["div109", "buttonAddToCart106242249722"],
  buttonAddToCart106242249722: ["buttonAddToCart106242249722"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  div101: "div";
  a11: "div";
  productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2: "a";
  div102: "div";
  _43Rating447Votes8: "div";
  i36: "div";
  i37: "div";
  i38: "div";
  i39: "div";
  i40: "div";
  div103: "div";
  form8: "div";
  div104: "div";
  div105: "div";
  div106: "div";
  div107: "a";
  label15: "div";
  strawberry8: "div";
  div108: "a";
  label16: "div";
  vanilla8: "div";
  div109: "div";
  buttonAddToCart106242249722: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicMeltSingle1440Px__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicMeltSingle1440Px__VariantsArgs;
    args?: PlasmicMeltSingle1440Px__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicMeltSingle1440Px__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicMeltSingle1440Px__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicMeltSingle1440Px__ArgProps,
          internalVariantPropNames: PlasmicMeltSingle1440Px__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicMeltSingle1440Px__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "div101") {
    func.displayName = "PlasmicMeltSingle1440Px";
  } else {
    func.displayName = `PlasmicMeltSingle1440Px.${nodeName}`;
  }
  return func;
}

export const PlasmicMeltSingle1440Px = Object.assign(
  // Top-level PlasmicMeltSingle1440Px renders the root element
  makeNodeComponent("div101"),
  {
    // Helper components rendering sub-elements
    a11: makeNodeComponent("a11"),
    productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2: makeNodeComponent(
      "productMeltE5Ee4B8CB3944Dfa969D133320737857250X2502Xjpg2"
    ),
    div102: makeNodeComponent("div102"),
    _43Rating447Votes8: makeNodeComponent("_43Rating447Votes8"),
    i36: makeNodeComponent("i36"),
    i37: makeNodeComponent("i37"),
    i38: makeNodeComponent("i38"),
    i39: makeNodeComponent("i39"),
    i40: makeNodeComponent("i40"),
    div103: makeNodeComponent("div103"),
    form8: makeNodeComponent("form8"),
    div104: makeNodeComponent("div104"),
    div105: makeNodeComponent("div105"),
    div106: makeNodeComponent("div106"),
    div107: makeNodeComponent("div107"),
    label15: makeNodeComponent("label15"),
    strawberry8: makeNodeComponent("strawberry8"),
    div108: makeNodeComponent("div108"),
    label16: makeNodeComponent("label16"),
    vanilla8: makeNodeComponent("vanilla8"),
    div109: makeNodeComponent("div109"),
    buttonAddToCart106242249722: makeNodeComponent(
      "buttonAddToCart106242249722"
    ),

    // Metadata about props expected for PlasmicMeltSingle1440Px
    internalVariantProps: PlasmicMeltSingle1440Px__VariantProps,
    internalArgProps: PlasmicMeltSingle1440Px__ArgProps
  }
);

export default PlasmicMeltSingle1440Px;
/* prettier-ignore-end */
