// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: hPXUkchYh8lQa
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./PlasmicPromissoryCommitment414Px.module.css"; // plasmic-import: hPXUkchYh8lQa/css

export type PlasmicPromissoryCommitment414Px__VariantMembers = {};
export type PlasmicPromissoryCommitment414Px__VariantsArgs = {};
type VariantPropType = keyof PlasmicPromissoryCommitment414Px__VariantsArgs;
export const PlasmicPromissoryCommitment414Px__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPromissoryCommitment414Px__ArgsType = {};
type ArgPropType = keyof PlasmicPromissoryCommitment414Px__ArgsType;
export const PlasmicPromissoryCommitment414Px__ArgProps =
  new Array<ArgPropType>();

export type PlasmicPromissoryCommitment414Px__OverridesType = {
  section?: p.Flex<"div">;
  div56?: p.Flex<"div">;
  promissoryCommitment?: p.Flex<"div">;
  div57?: p.Flex<"div">;
  div58?: p.Flex<"div">;
  safetyPractices480X480Png?: p.Flex<"div">;
  safetyPractices?: p.Flex<"div">;
  weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals?: p.Flex<"div">;
  div59?: p.Flex<"div">;
  extensiveScientificResearch480X480Png?: p.Flex<"div">;
  extensiveScientificResearch?: p.Flex<"div">;
  weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory?: p.Flex<"div">;
  div60?: p.Flex<"div">;
  environmentallyResponsible480X480Png?: p.Flex<"div">;
  environmentallyResponsible?: p.Flex<"div">;
  weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices?: p.Flex<"div">;
  div61?: p.Flex<"div">;
  givingBack480X480Png?: p.Flex<"div">;
  givingBack?: p.Flex<"div">;
  weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges?: p.Flex<"div">;
};

export interface DefaultPromissoryCommitment414PxProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPromissoryCommitment414Px__RenderFunc(props: {
  variants: PlasmicPromissoryCommitment414Px__VariantsArgs;
  args: PlasmicPromissoryCommitment414Px__ArgsType;
  overrides: PlasmicPromissoryCommitment414Px__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={"section"}
      data-plasmic-override={overrides.section}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.section
      )}
    >
      <div
        data-plasmic-name={"div56"}
        data-plasmic-override={overrides.div56}
        className={classNames(projectcss.all, sty.div56)}
      >
        <div
          data-plasmic-name={"promissoryCommitment"}
          data-plasmic-override={overrides.promissoryCommitment}
          className={classNames(projectcss.all, sty.promissoryCommitment)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__aTnAq
            )}
          >
            {"Promissory Commitment"}
          </div>
        </div>

        <div
          data-plasmic-name={"div57"}
          data-plasmic-override={overrides.div57}
          className={classNames(projectcss.all, sty.div57)}
        >
          <div
            data-plasmic-name={"div58"}
            data-plasmic-override={overrides.div58}
            className={classNames(projectcss.all, sty.div58)}
          >
            <div
              data-plasmic-name={"safetyPractices480X480Png"}
              data-plasmic-override={overrides.safetyPractices480X480Png}
              className={classNames(
                projectcss.all,
                sty.safetyPractices480X480Png
              )}
            />

            <div
              data-plasmic-name={"safetyPractices"}
              data-plasmic-override={overrides.safetyPractices}
              className={classNames(projectcss.all, sty.safetyPractices)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sbcAo
                )}
              >
                {"Safety Practices"}
              </div>
            </div>

            <div
              data-plasmic-name={
                "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals"
              }
              data-plasmic-override={
                overrides.weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals
              }
              className={classNames(
                projectcss.all,
                sty.weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7OwD
                )}
              >
                {
                  "We live by the Hippocratic Oath: First do no harm. Our products are made without nicotine or harmful chemicals."
                }
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"div59"}
            data-plasmic-override={overrides.div59}
            className={classNames(projectcss.all, sty.div59)}
          >
            <div
              data-plasmic-name={"extensiveScientificResearch480X480Png"}
              data-plasmic-override={
                overrides.extensiveScientificResearch480X480Png
              }
              className={classNames(
                projectcss.all,
                sty.extensiveScientificResearch480X480Png
              )}
            />

            <div
              data-plasmic-name={"extensiveScientificResearch"}
              data-plasmic-override={overrides.extensiveScientificResearch}
              className={classNames(
                projectcss.all,
                sty.extensiveScientificResearch
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___09BQs
                )}
              >
                {"Extensive Scientific Research"}
              </div>
            </div>

            <div
              data-plasmic-name={
                "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory"
              }
              data-plasmic-override={
                overrides.weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory
              }
              className={classNames(
                projectcss.all,
                sty.weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ueOua
                )}
              >
                {
                  "We ensure all our products are formulated under the direction of a renowned inhalation toxicologist and tested by an ISO-accredited independent laboratory."
                }
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"div60"}
            data-plasmic-override={overrides.div60}
            className={classNames(projectcss.all, sty.div60)}
          >
            <div
              data-plasmic-name={"environmentallyResponsible480X480Png"}
              data-plasmic-override={
                overrides.environmentallyResponsible480X480Png
              }
              className={classNames(
                projectcss.all,
                sty.environmentallyResponsible480X480Png
              )}
            />

            <div
              data-plasmic-name={"environmentallyResponsible"}
              data-plasmic-override={overrides.environmentallyResponsible}
              className={classNames(
                projectcss.all,
                sty.environmentallyResponsible
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6Kjxl
                )}
              >
                {"Environmentally Responsible"}
              </div>
            </div>

            <div
              data-plasmic-name={
                "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices"
              }
              data-plasmic-override={
                overrides.weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices
              }
              className={classNames(
                projectcss.all,
                sty.weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2NOa1
                )}
              >
                {
                  "We seek to inspire a culture of environmental sensitivity through sustainable product design and ethical business practices."
                }
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"div61"}
            data-plasmic-override={overrides.div61}
            className={classNames(projectcss.all, sty.div61)}
          >
            <div
              data-plasmic-name={"givingBack480X480Png"}
              data-plasmic-override={overrides.givingBack480X480Png}
              className={classNames(projectcss.all, sty.givingBack480X480Png)}
            />

            <div
              data-plasmic-name={"givingBack"}
              data-plasmic-override={overrides.givingBack}
              className={classNames(projectcss.all, sty.givingBack)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tvwor
                )}
              >
                {"Giving Back"}
              </div>
            </div>

            <div
              data-plasmic-name={
                "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
              }
              data-plasmic-override={
                overrides.weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges
              }
              className={classNames(
                projectcss.all,
                sty.weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9Noy8
                )}
              >
                {
                  "We use a percentage of your purchase to empower innovative start-ups to solve humanity's most pressing environmental challenges."
                }
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  section: [
    "section",
    "div56",
    "promissoryCommitment",
    "div57",
    "div58",
    "safetyPractices480X480Png",
    "safetyPractices",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals",
    "div59",
    "extensiveScientificResearch480X480Png",
    "extensiveScientificResearch",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory",
    "div60",
    "environmentallyResponsible480X480Png",
    "environmentallyResponsible",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices",
    "div61",
    "givingBack480X480Png",
    "givingBack",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
  ],
  div56: [
    "div56",
    "promissoryCommitment",
    "div57",
    "div58",
    "safetyPractices480X480Png",
    "safetyPractices",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals",
    "div59",
    "extensiveScientificResearch480X480Png",
    "extensiveScientificResearch",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory",
    "div60",
    "environmentallyResponsible480X480Png",
    "environmentallyResponsible",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices",
    "div61",
    "givingBack480X480Png",
    "givingBack",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
  ],
  promissoryCommitment: ["promissoryCommitment"],
  div57: [
    "div57",
    "div58",
    "safetyPractices480X480Png",
    "safetyPractices",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals",
    "div59",
    "extensiveScientificResearch480X480Png",
    "extensiveScientificResearch",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory",
    "div60",
    "environmentallyResponsible480X480Png",
    "environmentallyResponsible",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices",
    "div61",
    "givingBack480X480Png",
    "givingBack",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
  ],
  div58: [
    "div58",
    "safetyPractices480X480Png",
    "safetyPractices",
    "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals"
  ],
  safetyPractices480X480Png: ["safetyPractices480X480Png"],
  safetyPractices: ["safetyPractices"],
  weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals:
    [
      "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals"
    ],
  div59: [
    "div59",
    "extensiveScientificResearch480X480Png",
    "extensiveScientificResearch",
    "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory"
  ],
  extensiveScientificResearch480X480Png: [
    "extensiveScientificResearch480X480Png"
  ],
  extensiveScientificResearch: ["extensiveScientificResearch"],
  weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory:
    [
      "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory"
    ],
  div60: [
    "div60",
    "environmentallyResponsible480X480Png",
    "environmentallyResponsible",
    "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices"
  ],
  environmentallyResponsible480X480Png: [
    "environmentallyResponsible480X480Png"
  ],
  environmentallyResponsible: ["environmentallyResponsible"],
  weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices:
    [
      "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices"
    ],
  div61: [
    "div61",
    "givingBack480X480Png",
    "givingBack",
    "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
  ],
  givingBack480X480Png: ["givingBack480X480Png"],
  givingBack: ["givingBack"],
  weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges:
    [
      "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
    ]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  section: "div";
  div56: "div";
  promissoryCommitment: "div";
  div57: "div";
  div58: "div";
  safetyPractices480X480Png: "div";
  safetyPractices: "div";
  weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals: "div";
  div59: "div";
  extensiveScientificResearch480X480Png: "div";
  extensiveScientificResearch: "div";
  weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory: "div";
  div60: "div";
  environmentallyResponsible480X480Png: "div";
  environmentallyResponsible: "div";
  weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices: "div";
  div61: "div";
  givingBack480X480Png: "div";
  givingBack: "div";
  weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPromissoryCommitment414Px__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPromissoryCommitment414Px__VariantsArgs;
    args?: PlasmicPromissoryCommitment414Px__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPromissoryCommitment414Px__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPromissoryCommitment414Px__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPromissoryCommitment414Px__ArgProps,
          internalVariantPropNames:
            PlasmicPromissoryCommitment414Px__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPromissoryCommitment414Px__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "section") {
    func.displayName = "PlasmicPromissoryCommitment414Px";
  } else {
    func.displayName = `PlasmicPromissoryCommitment414Px.${nodeName}`;
  }
  return func;
}

export const PlasmicPromissoryCommitment414Px = Object.assign(
  // Top-level PlasmicPromissoryCommitment414Px renders the root element
  makeNodeComponent("section"),
  {
    // Helper components rendering sub-elements
    div56: makeNodeComponent("div56"),
    promissoryCommitment: makeNodeComponent("promissoryCommitment"),
    div57: makeNodeComponent("div57"),
    div58: makeNodeComponent("div58"),
    safetyPractices480X480Png: makeNodeComponent("safetyPractices480X480Png"),
    safetyPractices: makeNodeComponent("safetyPractices"),
    weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals:
      makeNodeComponent(
        "weLiveByTheHippocraticOathFirstDoNoHarmOurProductsAreMadeWithoutNicotineOrHarmfulChemicals"
      ),
    div59: makeNodeComponent("div59"),
    extensiveScientificResearch480X480Png: makeNodeComponent(
      "extensiveScientificResearch480X480Png"
    ),
    extensiveScientificResearch: makeNodeComponent(
      "extensiveScientificResearch"
    ),
    weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory:
      makeNodeComponent(
        "weEnsureAllOurProductsAreFormulatedUnderTheDirectionOfARenownedInhalationToxicologistAndTestedByAnIsoAccreditedIndependentLaboratory"
      ),
    div60: makeNodeComponent("div60"),
    environmentallyResponsible480X480Png: makeNodeComponent(
      "environmentallyResponsible480X480Png"
    ),
    environmentallyResponsible: makeNodeComponent("environmentallyResponsible"),
    weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices:
      makeNodeComponent(
        "weSeekToInspireACultureOfEnvironmentalSensitivityThroughSustainableProductDesignAndEthicalBusinessPractices"
      ),
    div61: makeNodeComponent("div61"),
    givingBack480X480Png: makeNodeComponent("givingBack480X480Png"),
    givingBack: makeNodeComponent("givingBack"),
    weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges:
      makeNodeComponent(
        "weUseAPercentageOfYourPurchaseToEmpowerInnovativeStartUpsToSolveHumanitysMostPressingEnvironmentalChallenges"
      ),

    // Metadata about props expected for PlasmicPromissoryCommitment414Px
    internalVariantProps: PlasmicPromissoryCommitment414Px__VariantProps,
    internalArgProps: PlasmicPromissoryCommitment414Px__ArgProps
  }
);

export default PlasmicPromissoryCommitment414Px;
/* prettier-ignore-end */
