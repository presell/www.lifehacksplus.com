// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: FynkGdTOvgCs2
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantssuXxHpH6GpmS } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: SUXxHpH6GpmS/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./Plasmic_414BogoOffer.module.css"; // plasmic-import: FynkGdTOvgCs2/css

export type Plasmic_414BogoOffer__VariantMembers = {};
export type Plasmic_414BogoOffer__VariantsArgs = {};
type VariantPropType = keyof Plasmic_414BogoOffer__VariantsArgs;
export const Plasmic_414BogoOffer__VariantProps = new Array<VariantPropType>();

export type Plasmic_414BogoOffer__ArgsType = {};
type ArgPropType = keyof Plasmic_414BogoOffer__ArgsType;
export const Plasmic_414BogoOffer__ArgProps = new Array<ArgPropType>();

export type Plasmic_414BogoOffer__OverridesType = {
  divprodarea5?: p.Flex<"div">;
  div315?: p.Flex<"div">;
  aget24?: p.Flex<"div">;
  feelTheDifference3?: p.Flex<"div">;
  fingericonpng5?: p.Flex<"div">;
  paymentcardpng5?: p.Flex<"div">;
  div316?: p.Flex<"div">;
  div317?: p.Flex<"div">;
  prodimagepng5?: p.Flex<"div">;
  div318?: p.Flex<"div">;
  buy2Get5?: p.Flex<"div">;
  free5?: p.Flex<"div">;
  div319?: p.Flex<"div">;
  specialOffer3?: p.Flex<"div">;
  freeVitaminAir3?: p.Flex<"div">;
  moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3?: p.Flex<"div">;
  div320?: p.Flex<"div">;
  chooseFlavor7?: p.Flex<"div">;
  div321?: p.Flex<"div">;
  div322?: p.Flex<"a"> & Partial<LinkProps>;
  div323?: p.Flex<"div">;
  div324?: p.Flex<"div">;
  strawberry11?: p.Flex<"div">;
  div325?: p.Flex<"a"> & Partial<LinkProps>;
  div326?: p.Flex<"div">;
  div327?: p.Flex<"div">;
  vanila5?: p.Flex<"div">;
};

export interface Default_414BogoOfferProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_414BogoOffer__RenderFunc(props: {
  variants: Plasmic_414BogoOffer__VariantsArgs;
  args: Plasmic_414BogoOffer__ArgsType;
  overrides: Plasmic_414BogoOffer__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssuXxHpH6GpmS()
  });

  return (
    <div
      data-plasmic-name={"divprodarea5"}
      data-plasmic-override={overrides.divprodarea5}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.divprodarea5
      )}
      id={"offer" as const}
    >
      <div
        data-plasmic-name={"div315"}
        data-plasmic-override={overrides.div315}
        className={classNames(projectcss.all, sty.div315)}
      >
        {(
          hasVariant(globalVariants, "screen", "largestMobile") ? true : true
        ) ? (
          <div
            data-plasmic-name={"aget24"}
            data-plasmic-override={overrides.aget24}
            className={classNames(projectcss.all, sty.aget24)}
          >
            <div
              data-plasmic-name={"feelTheDifference3"}
              data-plasmic-override={overrides.feelTheDifference3}
              className={classNames(projectcss.all, sty.feelTheDifference3)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3OUjR
                )}
              >
                {"FEEL THE DIFFERENCE"}
              </div>
            </div>

            <div
              data-plasmic-name={"fingericonpng5"}
              data-plasmic-override={overrides.fingericonpng5}
              className={classNames(projectcss.all, sty.fingericonpng5)}
            />
          </div>
        ) : null}

        <div
          data-plasmic-name={"paymentcardpng5"}
          data-plasmic-override={overrides.paymentcardpng5}
          className={classNames(projectcss.all, sty.paymentcardpng5)}
        />
      </div>

      <div
        data-plasmic-name={"div316"}
        data-plasmic-override={overrides.div316}
        className={classNames(projectcss.all, sty.div316)}
      >
        <div
          data-plasmic-name={"div317"}
          data-plasmic-override={overrides.div317}
          className={classNames(projectcss.all, sty.div317)}
        >
          <div
            data-plasmic-name={"prodimagepng5"}
            data-plasmic-override={overrides.prodimagepng5}
            className={classNames(projectcss.all, sty.prodimagepng5)}
          />

          <div
            data-plasmic-name={"div318"}
            data-plasmic-override={overrides.div318}
            className={classNames(projectcss.all, sty.div318)}
          >
            <div
              data-plasmic-name={"buy2Get5"}
              data-plasmic-override={overrides.buy2Get5}
              className={classNames(projectcss.all, sty.buy2Get5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__keNfB
                )}
              >
                {"BUY 2, Get 1"}
              </div>
            </div>

            <div
              data-plasmic-name={"free5"}
              data-plasmic-override={overrides.free5}
              className={classNames(projectcss.all, sty.free5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rypLo
                )}
              >
                {"Free"}
              </div>
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div319"}
          data-plasmic-override={overrides.div319}
          className={classNames(projectcss.all, sty.div319)}
        >
          <div
            data-plasmic-name={"specialOffer3"}
            data-plasmic-override={overrides.specialOffer3}
            className={classNames(projectcss.all, sty.specialOffer3)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nc6I5
              )}
            >
              {"special offer"}
            </div>
          </div>

          <div
            data-plasmic-name={"freeVitaminAir3"}
            data-plasmic-override={overrides.freeVitaminAir3}
            className={classNames(projectcss.all, sty.freeVitaminAir3)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__upTNa
              )}
            >
              {"free vitamin air"}
            </div>
          </div>

          <div
            data-plasmic-name={
              "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3"
            }
            data-plasmic-override={
              overrides.moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3
            }
            className={classNames(
              projectcss.all,
              sty.moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___4BvqE
              )}
            >
              {
                "Money-Back Guarantee: Better Flavor & Harder Hits or Your Money Back."
              }
            </div>
          </div>

          <div
            data-plasmic-name={"div320"}
            data-plasmic-override={overrides.div320}
            className={classNames(projectcss.all, sty.div320)}
          >
            <div
              data-plasmic-name={"chooseFlavor7"}
              data-plasmic-override={overrides.chooseFlavor7}
              className={classNames(projectcss.all, sty.chooseFlavor7)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0GMuO
                )}
              >
                {"Choose Flavor"}
              </div>
            </div>

            <div
              data-plasmic-name={"div321"}
              data-plasmic-override={overrides.div321}
              className={classNames(projectcss.all, sty.div321)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div322"}
                data-plasmic-override={overrides.div322}
                className={classNames(projectcss.all, projectcss.a, sty.div322)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/FREE?redirect=/cart/39394788108:1,39394868748:1,39394817036:1?note=LHP-cw-offer-widget" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"div323"}
                  data-plasmic-override={overrides.div323}
                  className={classNames(projectcss.all, sty.div323)}
                >
                  <div
                    data-plasmic-name={"div324"}
                    data-plasmic-override={overrides.div324}
                    className={classNames(projectcss.all, sty.div324)}
                  />
                </div>

                <div
                  data-plasmic-name={"strawberry11"}
                  data-plasmic-override={overrides.strawberry11}
                  className={classNames(projectcss.all, sty.strawberry11)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sX69F
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div325"}
                data-plasmic-override={overrides.div325}
                className={classNames(projectcss.all, projectcss.a, sty.div325)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/FREE?redirect=/cart/39394788236:1,39394868940:1,39394817164:1?discount=FREE&note=LHP-cw-offer-widget" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"div326"}
                  data-plasmic-override={overrides.div326}
                  className={classNames(projectcss.all, sty.div326)}
                >
                  <div
                    data-plasmic-name={"div327"}
                    data-plasmic-override={overrides.div327}
                    className={classNames(projectcss.all, sty.div327)}
                  />
                </div>

                <div
                  data-plasmic-name={"vanila5"}
                  data-plasmic-override={overrides.vanila5}
                  className={classNames(projectcss.all, sty.vanila5)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q4Uob
                    )}
                  >
                    {"Vanila"}
                  </div>
                </div>
              </p.PlasmicLink>
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  divprodarea5: [
    "divprodarea5",
    "div315",
    "aget24",
    "feelTheDifference3",
    "fingericonpng5",
    "paymentcardpng5",
    "div316",
    "div317",
    "prodimagepng5",
    "div318",
    "buy2Get5",
    "free5",
    "div319",
    "specialOffer3",
    "freeVitaminAir3",
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3",
    "div320",
    "chooseFlavor7",
    "div321",
    "div322",
    "div323",
    "div324",
    "strawberry11",
    "div325",
    "div326",
    "div327",
    "vanila5"
  ],
  div315: [
    "div315",
    "aget24",
    "feelTheDifference3",
    "fingericonpng5",
    "paymentcardpng5"
  ],
  aget24: ["aget24", "feelTheDifference3", "fingericonpng5"],
  feelTheDifference3: ["feelTheDifference3"],
  fingericonpng5: ["fingericonpng5"],
  paymentcardpng5: ["paymentcardpng5"],
  div316: [
    "div316",
    "div317",
    "prodimagepng5",
    "div318",
    "buy2Get5",
    "free5",
    "div319",
    "specialOffer3",
    "freeVitaminAir3",
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3",
    "div320",
    "chooseFlavor7",
    "div321",
    "div322",
    "div323",
    "div324",
    "strawberry11",
    "div325",
    "div326",
    "div327",
    "vanila5"
  ],
  div317: ["div317", "prodimagepng5", "div318", "buy2Get5", "free5"],
  prodimagepng5: ["prodimagepng5"],
  div318: ["div318", "buy2Get5", "free5"],
  buy2Get5: ["buy2Get5"],
  free5: ["free5"],
  div319: [
    "div319",
    "specialOffer3",
    "freeVitaminAir3",
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3",
    "div320",
    "chooseFlavor7",
    "div321",
    "div322",
    "div323",
    "div324",
    "strawberry11",
    "div325",
    "div326",
    "div327",
    "vanila5"
  ],
  specialOffer3: ["specialOffer3"],
  freeVitaminAir3: ["freeVitaminAir3"],
  moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3: [
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3"
  ],
  div320: [
    "div320",
    "chooseFlavor7",
    "div321",
    "div322",
    "div323",
    "div324",
    "strawberry11",
    "div325",
    "div326",
    "div327",
    "vanila5"
  ],
  chooseFlavor7: ["chooseFlavor7"],
  div321: [
    "div321",
    "div322",
    "div323",
    "div324",
    "strawberry11",
    "div325",
    "div326",
    "div327",
    "vanila5"
  ],
  div322: ["div322", "div323", "div324", "strawberry11"],
  div323: ["div323", "div324"],
  div324: ["div324"],
  strawberry11: ["strawberry11"],
  div325: ["div325", "div326", "div327", "vanila5"],
  div326: ["div326", "div327"],
  div327: ["div327"],
  vanila5: ["vanila5"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  divprodarea5: "div";
  div315: "div";
  aget24: "div";
  feelTheDifference3: "div";
  fingericonpng5: "div";
  paymentcardpng5: "div";
  div316: "div";
  div317: "div";
  prodimagepng5: "div";
  div318: "div";
  buy2Get5: "div";
  free5: "div";
  div319: "div";
  specialOffer3: "div";
  freeVitaminAir3: "div";
  moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3: "div";
  div320: "div";
  chooseFlavor7: "div";
  div321: "div";
  div322: "a";
  div323: "div";
  div324: "div";
  strawberry11: "div";
  div325: "a";
  div326: "div";
  div327: "div";
  vanila5: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_414BogoOffer__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_414BogoOffer__VariantsArgs;
    args?: Plasmic_414BogoOffer__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_414BogoOffer__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_414BogoOffer__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic_414BogoOffer__ArgProps,
          internalVariantPropNames: Plasmic_414BogoOffer__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_414BogoOffer__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "divprodarea5") {
    func.displayName = "Plasmic_414BogoOffer";
  } else {
    func.displayName = `Plasmic_414BogoOffer.${nodeName}`;
  }
  return func;
}

export const Plasmic_414BogoOffer = Object.assign(
  // Top-level Plasmic_414BogoOffer renders the root element
  makeNodeComponent("divprodarea5"),
  {
    // Helper components rendering sub-elements
    div315: makeNodeComponent("div315"),
    aget24: makeNodeComponent("aget24"),
    feelTheDifference3: makeNodeComponent("feelTheDifference3"),
    fingericonpng5: makeNodeComponent("fingericonpng5"),
    paymentcardpng5: makeNodeComponent("paymentcardpng5"),
    div316: makeNodeComponent("div316"),
    div317: makeNodeComponent("div317"),
    prodimagepng5: makeNodeComponent("prodimagepng5"),
    div318: makeNodeComponent("div318"),
    buy2Get5: makeNodeComponent("buy2Get5"),
    free5: makeNodeComponent("free5"),
    div319: makeNodeComponent("div319"),
    specialOffer3: makeNodeComponent("specialOffer3"),
    freeVitaminAir3: makeNodeComponent("freeVitaminAir3"),
    moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3: makeNodeComponent(
      "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack3"
    ),
    div320: makeNodeComponent("div320"),
    chooseFlavor7: makeNodeComponent("chooseFlavor7"),
    div321: makeNodeComponent("div321"),
    div322: makeNodeComponent("div322"),
    div323: makeNodeComponent("div323"),
    div324: makeNodeComponent("div324"),
    strawberry11: makeNodeComponent("strawberry11"),
    div325: makeNodeComponent("div325"),
    div326: makeNodeComponent("div326"),
    div327: makeNodeComponent("div327"),
    vanila5: makeNodeComponent("vanila5"),

    // Metadata about props expected for Plasmic_414BogoOffer
    internalVariantProps: Plasmic_414BogoOffer__VariantProps,
    internalArgProps: Plasmic_414BogoOffer__ArgProps
  }
);

export default Plasmic_414BogoOffer;
/* prettier-ignore-end */
