// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wJD4VsJTYW6gZPn3AUEzqs
// Component: lUwyfzEUrpopJ
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantssuXxHpH6GpmS } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: SUXxHpH6GpmS/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_masteri_sparq.module.css"; // plasmic-import: wJD4VsJTYW6gZPn3AUEzqs/projectcss
import sty from "./Plasmic_320PxCwOfferBogo.module.css"; // plasmic-import: lUwyfzEUrpopJ/css

export type Plasmic_320PxCwOfferBogo__VariantMembers = {};
export type Plasmic_320PxCwOfferBogo__VariantsArgs = {};
type VariantPropType = keyof Plasmic_320PxCwOfferBogo__VariantsArgs;
export const Plasmic_320PxCwOfferBogo__VariantProps =
  new Array<VariantPropType>();

export type Plasmic_320PxCwOfferBogo__ArgsType = {};
type ArgPropType = keyof Plasmic_320PxCwOfferBogo__ArgsType;
export const Plasmic_320PxCwOfferBogo__ArgProps = new Array<ArgPropType>();

export type Plasmic_320PxCwOfferBogo__OverridesType = {
  divprodarea4?: p.Flex<"div">;
  div302?: p.Flex<"div">;
  aget23?: p.Flex<"div">;
  feelTheDifference2?: p.Flex<"div">;
  fingericonpng4?: p.Flex<"div">;
  paymentcardpng4?: p.Flex<"div">;
  div303?: p.Flex<"div">;
  div304?: p.Flex<"div">;
  prodimagepng4?: p.Flex<"div">;
  div305?: p.Flex<"div">;
  buy2Get4?: p.Flex<"div">;
  free4?: p.Flex<"div">;
  div306?: p.Flex<"div">;
  specialOffer2?: p.Flex<"div">;
  freeVitaminAir2?: p.Flex<"div">;
  moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2?: p.Flex<"div">;
  div307?: p.Flex<"div">;
  chooseFlavor6?: p.Flex<"div">;
  div308?: p.Flex<"div">;
  div309?: p.Flex<"a"> & Partial<LinkProps>;
  div310?: p.Flex<"div">;
  div311?: p.Flex<"div">;
  strawberry10?: p.Flex<"div">;
  div312?: p.Flex<"a"> & Partial<LinkProps>;
  div313?: p.Flex<"div">;
  div314?: p.Flex<"div">;
  vanila4?: p.Flex<"div">;
};

export interface Default_320PxCwOfferBogoProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_320PxCwOfferBogo__RenderFunc(props: {
  variants: Plasmic_320PxCwOfferBogo__VariantsArgs;
  args: Plasmic_320PxCwOfferBogo__ArgsType;
  overrides: Plasmic_320PxCwOfferBogo__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssuXxHpH6GpmS()
  });

  return (
    <div
      data-plasmic-name={"divprodarea4"}
      data-plasmic-override={overrides.divprodarea4}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.divprodarea4
      )}
      id={"offer" as const}
    >
      <div
        data-plasmic-name={"div302"}
        data-plasmic-override={overrides.div302}
        className={classNames(projectcss.all, sty.div302)}
      >
        {(
          hasVariant(globalVariants, "screen", "smallestMobile") ? true : true
        ) ? (
          <div
            data-plasmic-name={"aget23"}
            data-plasmic-override={overrides.aget23}
            className={classNames(projectcss.all, sty.aget23)}
          >
            <div
              data-plasmic-name={"feelTheDifference2"}
              data-plasmic-override={overrides.feelTheDifference2}
              className={classNames(projectcss.all, sty.feelTheDifference2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dmNqV
                )}
              >
                {"FEEL THE DIFFERENCE"}
              </div>
            </div>

            <div
              data-plasmic-name={"fingericonpng4"}
              data-plasmic-override={overrides.fingericonpng4}
              className={classNames(projectcss.all, sty.fingericonpng4)}
            />
          </div>
        ) : null}

        <div
          data-plasmic-name={"paymentcardpng4"}
          data-plasmic-override={overrides.paymentcardpng4}
          className={classNames(projectcss.all, sty.paymentcardpng4)}
        />
      </div>

      <div
        data-plasmic-name={"div303"}
        data-plasmic-override={overrides.div303}
        className={classNames(projectcss.all, sty.div303)}
      >
        <div
          data-plasmic-name={"div304"}
          data-plasmic-override={overrides.div304}
          className={classNames(projectcss.all, sty.div304)}
        >
          <div
            data-plasmic-name={"prodimagepng4"}
            data-plasmic-override={overrides.prodimagepng4}
            className={classNames(projectcss.all, sty.prodimagepng4)}
          />

          <div
            data-plasmic-name={"div305"}
            data-plasmic-override={overrides.div305}
            className={classNames(projectcss.all, sty.div305)}
          >
            <div
              data-plasmic-name={"buy2Get4"}
              data-plasmic-override={overrides.buy2Get4}
              className={classNames(projectcss.all, sty.buy2Get4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__o9S6P
                )}
              >
                {"BUY 2, Get 1"}
              </div>
            </div>

            <div
              data-plasmic-name={"free4"}
              data-plasmic-override={overrides.free4}
              className={classNames(projectcss.all, sty.free4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pbQjF
                )}
              >
                {"Free"}
              </div>
            </div>
          </div>
        </div>

        <div
          data-plasmic-name={"div306"}
          data-plasmic-override={overrides.div306}
          className={classNames(projectcss.all, sty.div306)}
        >
          <div
            data-plasmic-name={"specialOffer2"}
            data-plasmic-override={overrides.specialOffer2}
            className={classNames(projectcss.all, sty.specialOffer2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qaHsq
              )}
            >
              {"special offer"}
            </div>
          </div>

          <div
            data-plasmic-name={"freeVitaminAir2"}
            data-plasmic-override={overrides.freeVitaminAir2}
            className={classNames(projectcss.all, sty.freeVitaminAir2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hdGez
              )}
            >
              {"free vitamin air"}
            </div>
          </div>

          <div
            data-plasmic-name={
              "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2"
            }
            data-plasmic-override={
              overrides.moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2
            }
            className={classNames(
              projectcss.all,
              sty.moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2
            )}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___1JRHx
              )}
            >
              {
                "Money-Back Guarantee: Better Flavor & Harder Hits or Your Money Back."
              }
            </div>
          </div>

          <div
            data-plasmic-name={"div307"}
            data-plasmic-override={overrides.div307}
            className={classNames(projectcss.all, sty.div307)}
          >
            <div
              data-plasmic-name={"chooseFlavor6"}
              data-plasmic-override={overrides.chooseFlavor6}
              className={classNames(projectcss.all, sty.chooseFlavor6)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8IRln
                )}
              >
                {"Choose Flavor"}
              </div>
            </div>

            <div
              data-plasmic-name={"div308"}
              data-plasmic-override={overrides.div308}
              className={classNames(projectcss.all, sty.div308)}
            >
              <p.PlasmicLink
                data-plasmic-name={"div309"}
                data-plasmic-override={overrides.div309}
                className={classNames(projectcss.all, projectcss.a, sty.div309)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/FREE?redirect=/cart/39394788108:1,39394868748:1,39394817036:1?note=LHP-cw-offer-widget" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"div310"}
                  data-plasmic-override={overrides.div310}
                  className={classNames(projectcss.all, sty.div310)}
                >
                  <div
                    data-plasmic-name={"div311"}
                    data-plasmic-override={overrides.div311}
                    className={classNames(projectcss.all, sty.div311)}
                  />
                </div>

                <div
                  data-plasmic-name={"strawberry10"}
                  data-plasmic-override={overrides.strawberry10}
                  className={classNames(projectcss.all, sty.strawberry10)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sxZjk
                    )}
                  >
                    {"Strawberry"}
                  </div>
                </div>
              </p.PlasmicLink>

              <p.PlasmicLink
                data-plasmic-name={"div312"}
                data-plasmic-override={overrides.div312}
                className={classNames(projectcss.all, projectcss.a, sty.div312)}
                component={Link}
                href={
                  "https://shop.lifehacksplus.com/discount/FREE?redirect=/cart/39394788236:1,39394868940:1,39394817164:1?discount=FREE&note=LHP-cw-offer-widget" as const
                }
                platform={"nextjs"}
              >
                <div
                  data-plasmic-name={"div313"}
                  data-plasmic-override={overrides.div313}
                  className={classNames(projectcss.all, sty.div313)}
                >
                  <div
                    data-plasmic-name={"div314"}
                    data-plasmic-override={overrides.div314}
                    className={classNames(projectcss.all, sty.div314)}
                  />
                </div>

                <div
                  data-plasmic-name={"vanila4"}
                  data-plasmic-override={overrides.vanila4}
                  className={classNames(projectcss.all, sty.vanila4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cy1K
                    )}
                  >
                    {"Vanila"}
                  </div>
                </div>
              </p.PlasmicLink>
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  divprodarea4: [
    "divprodarea4",
    "div302",
    "aget23",
    "feelTheDifference2",
    "fingericonpng4",
    "paymentcardpng4",
    "div303",
    "div304",
    "prodimagepng4",
    "div305",
    "buy2Get4",
    "free4",
    "div306",
    "specialOffer2",
    "freeVitaminAir2",
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2",
    "div307",
    "chooseFlavor6",
    "div308",
    "div309",
    "div310",
    "div311",
    "strawberry10",
    "div312",
    "div313",
    "div314",
    "vanila4"
  ],
  div302: [
    "div302",
    "aget23",
    "feelTheDifference2",
    "fingericonpng4",
    "paymentcardpng4"
  ],
  aget23: ["aget23", "feelTheDifference2", "fingericonpng4"],
  feelTheDifference2: ["feelTheDifference2"],
  fingericonpng4: ["fingericonpng4"],
  paymentcardpng4: ["paymentcardpng4"],
  div303: [
    "div303",
    "div304",
    "prodimagepng4",
    "div305",
    "buy2Get4",
    "free4",
    "div306",
    "specialOffer2",
    "freeVitaminAir2",
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2",
    "div307",
    "chooseFlavor6",
    "div308",
    "div309",
    "div310",
    "div311",
    "strawberry10",
    "div312",
    "div313",
    "div314",
    "vanila4"
  ],
  div304: ["div304", "prodimagepng4", "div305", "buy2Get4", "free4"],
  prodimagepng4: ["prodimagepng4"],
  div305: ["div305", "buy2Get4", "free4"],
  buy2Get4: ["buy2Get4"],
  free4: ["free4"],
  div306: [
    "div306",
    "specialOffer2",
    "freeVitaminAir2",
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2",
    "div307",
    "chooseFlavor6",
    "div308",
    "div309",
    "div310",
    "div311",
    "strawberry10",
    "div312",
    "div313",
    "div314",
    "vanila4"
  ],
  specialOffer2: ["specialOffer2"],
  freeVitaminAir2: ["freeVitaminAir2"],
  moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2: [
    "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2"
  ],
  div307: [
    "div307",
    "chooseFlavor6",
    "div308",
    "div309",
    "div310",
    "div311",
    "strawberry10",
    "div312",
    "div313",
    "div314",
    "vanila4"
  ],
  chooseFlavor6: ["chooseFlavor6"],
  div308: [
    "div308",
    "div309",
    "div310",
    "div311",
    "strawberry10",
    "div312",
    "div313",
    "div314",
    "vanila4"
  ],
  div309: ["div309", "div310", "div311", "strawberry10"],
  div310: ["div310", "div311"],
  div311: ["div311"],
  strawberry10: ["strawberry10"],
  div312: ["div312", "div313", "div314", "vanila4"],
  div313: ["div313", "div314"],
  div314: ["div314"],
  vanila4: ["vanila4"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  divprodarea4: "div";
  div302: "div";
  aget23: "div";
  feelTheDifference2: "div";
  fingericonpng4: "div";
  paymentcardpng4: "div";
  div303: "div";
  div304: "div";
  prodimagepng4: "div";
  div305: "div";
  buy2Get4: "div";
  free4: "div";
  div306: "div";
  specialOffer2: "div";
  freeVitaminAir2: "div";
  moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2: "div";
  div307: "div";
  chooseFlavor6: "div";
  div308: "div";
  div309: "a";
  div310: "div";
  div311: "div";
  strawberry10: "div";
  div312: "a";
  div313: "div";
  div314: "div";
  vanila4: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_320PxCwOfferBogo__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_320PxCwOfferBogo__VariantsArgs;
    args?: Plasmic_320PxCwOfferBogo__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_320PxCwOfferBogo__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_320PxCwOfferBogo__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: Plasmic_320PxCwOfferBogo__ArgProps,
          internalVariantPropNames: Plasmic_320PxCwOfferBogo__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_320PxCwOfferBogo__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "divprodarea4") {
    func.displayName = "Plasmic_320PxCwOfferBogo";
  } else {
    func.displayName = `Plasmic_320PxCwOfferBogo.${nodeName}`;
  }
  return func;
}

export const Plasmic_320PxCwOfferBogo = Object.assign(
  // Top-level Plasmic_320PxCwOfferBogo renders the root element
  makeNodeComponent("divprodarea4"),
  {
    // Helper components rendering sub-elements
    div302: makeNodeComponent("div302"),
    aget23: makeNodeComponent("aget23"),
    feelTheDifference2: makeNodeComponent("feelTheDifference2"),
    fingericonpng4: makeNodeComponent("fingericonpng4"),
    paymentcardpng4: makeNodeComponent("paymentcardpng4"),
    div303: makeNodeComponent("div303"),
    div304: makeNodeComponent("div304"),
    prodimagepng4: makeNodeComponent("prodimagepng4"),
    div305: makeNodeComponent("div305"),
    buy2Get4: makeNodeComponent("buy2Get4"),
    free4: makeNodeComponent("free4"),
    div306: makeNodeComponent("div306"),
    specialOffer2: makeNodeComponent("specialOffer2"),
    freeVitaminAir2: makeNodeComponent("freeVitaminAir2"),
    moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2: makeNodeComponent(
      "moneyBackGuaranteeBetterFlavorHarderHitsOrYourMoneyBack2"
    ),
    div307: makeNodeComponent("div307"),
    chooseFlavor6: makeNodeComponent("chooseFlavor6"),
    div308: makeNodeComponent("div308"),
    div309: makeNodeComponent("div309"),
    div310: makeNodeComponent("div310"),
    div311: makeNodeComponent("div311"),
    strawberry10: makeNodeComponent("strawberry10"),
    div312: makeNodeComponent("div312"),
    div313: makeNodeComponent("div313"),
    div314: makeNodeComponent("div314"),
    vanila4: makeNodeComponent("vanila4"),

    // Metadata about props expected for Plasmic_320PxCwOfferBogo
    internalVariantProps: Plasmic_320PxCwOfferBogo__VariantProps,
    internalArgProps: Plasmic_320PxCwOfferBogo__ArgProps
  }
);

export default Plasmic_320PxCwOfferBogo;
/* prettier-ignore-end */
